1
00:00:00,000 --> 00:00:00,990

2
00:00:00,990 --> 00:00:03,821
Hello and welcome to
Python for Informatics.

3
00:00:03,821 --> 00:00:06,070
Right now, we're going to
cover chapter one on Charles

4
00:00:06,070 --> 00:00:08,380
Severance from the
University of Michigan.

5
00:00:08,380 --> 00:00:10,910
And I'm the author, and
I'll be your lecturer

6
00:00:10,910 --> 00:00:15,560
for this online lecture of
the first chapter of the book.

7
00:00:15,560 --> 00:00:19,150
This lecture, and my slides, and
the book as a matter of fact,

8
00:00:19,150 --> 00:00:19,900
are all open.

9
00:00:19,900 --> 00:00:23,360
Open content, open materials.

10
00:00:23,360 --> 00:00:25,490
They're copyright Creative
Commons attribution.

11
00:00:25,490 --> 00:00:28,900
And this video recording is
also copyright Creative Commons

12
00:00:28,900 --> 00:00:29,454
attribution.

13
00:00:29,454 --> 00:00:31,370
It's important to be
explicit about copyright,

14
00:00:31,370 --> 00:00:35,620
and so I say it right
at the beginning.

15
00:00:35,620 --> 00:00:40,400
So if you have not yet done
it, please install Python.

16
00:00:40,400 --> 00:00:42,200
You're going to do
it sooner or later.

17
00:00:42,200 --> 00:00:45,174
And you actually might as well
do it before this lecture.

18
00:00:45,174 --> 00:00:47,590
You can listen to this lecture,
obviously, without Python,

19
00:00:47,590 --> 00:00:50,270
but it allows you to play
with some of the things.

20
00:00:50,270 --> 00:00:53,480
And we might even do a little
bit of Python in this lecture

21
00:00:53,480 --> 00:00:55,260
and show you Python
in the lecture.

22
00:00:55,260 --> 00:01:01,280
And so, you can go along if you
have Python in another window.

23
00:01:01,280 --> 00:01:06,050
There is
pythonlearn.com/install.php has

24
00:01:06,050 --> 00:01:10,030
instructions for Microsoft
Windows and Macintosh.

25
00:01:10,030 --> 00:01:14,190
And it's not on this slide, but
I just uploaded instructions

26
00:01:14,190 --> 00:01:17,040
on how to do this on a
Raspberry Pi-- the new really

27
00:01:17,040 --> 00:01:20,130
cool $25 computer.

28
00:01:20,130 --> 00:01:23,270
And they are really easy
and straightforward.

29
00:01:23,270 --> 00:01:26,770
They're complete screen
recordings, step by step, 10,

30
00:01:26,770 --> 00:01:28,830
15 minutes at the maximum.

31
00:01:28,830 --> 00:01:30,780
You can stop them,
you could start them,

32
00:01:30,780 --> 00:01:33,450
you can download them
to your hard drive.

33
00:01:33,450 --> 00:01:36,570
They will walk you through what
it takes to install Python,

34
00:01:36,570 --> 00:01:37,140
if needed.

35
00:01:37,140 --> 00:01:38,910
Install text editor, if needed.

36
00:01:38,910 --> 00:01:41,830
And then run your very
first Python program.

37
00:01:41,830 --> 00:01:44,000
And you're going to have
to run a Python program.

38
00:01:44,000 --> 00:01:48,600
So, this is as good of a
time as any to stop and get

39
00:01:48,600 --> 00:01:49,900
that done and then come back.

40
00:01:49,900 --> 00:01:51,190
OK?

41
00:01:51,190 --> 00:01:54,730
So, now, back to
the introduction.

42
00:01:54,730 --> 00:01:58,650
So, computers, basically,
want to be helpful.

43
00:01:58,650 --> 00:02:04,060
They are programmed-- matter of
fact this is a micro processor.

44
00:02:04,060 --> 00:02:06,370
This is really just
an electrical part.

45
00:02:06,370 --> 00:02:09,120
It's got wires and
circuits inside of it.

46
00:02:09,120 --> 00:02:12,130
And somebody spend a
lot of engineering time

47
00:02:12,130 --> 00:02:15,380
to make it so that
these pins in the back

48
00:02:15,380 --> 00:02:18,860
take instructions from
us, from operating

49
00:02:18,860 --> 00:02:22,080
systems, from the hard
drive, from the memory.

50
00:02:22,080 --> 00:02:24,480
Instructions come into here
and then results come out.

51
00:02:24,480 --> 00:02:27,340
It's really sort of a very
programmable hand calculator,

52
00:02:27,340 --> 00:02:29,820
and it's our job to
put instructions in.

53
00:02:29,820 --> 00:02:35,000
This thing, in a sense, is
wired to be curious about what's

54
00:02:35,000 --> 00:02:38,020
next, right?

55
00:02:38,020 --> 00:02:40,400
It's is like, tell me
what you want to do next?

56
00:02:40,400 --> 00:02:41,610
What do you want to do next?

57
00:02:41,610 --> 00:02:42,440
What you want to do next?

58
00:02:42,440 --> 00:02:44,148
And after that, what
you want to do next?

59
00:02:44,148 --> 00:02:47,060
And it just happens to do that
a billion or so times a second.

60
00:02:47,060 --> 00:02:50,250
And so, that's sort of
the low level piece.

61
00:02:50,250 --> 00:02:53,020
But you can also think
if you have a PDA,

62
00:02:53,020 --> 00:02:55,830
something like this, all
of the buttons on here

63
00:02:55,830 --> 00:02:59,660
are some kind of, what's next?

64
00:02:59,660 --> 00:03:00,400
Right?

65
00:03:00,400 --> 00:03:03,530
Each of those is something
begging for my attention.

66
00:03:03,530 --> 00:03:06,750
Some application developer who's
built a really cool application

67
00:03:06,750 --> 00:03:09,980
and says, please use
me, please click me,

68
00:03:09,980 --> 00:03:11,680
I am nothing without you.

69
00:03:11,680 --> 00:03:14,920
We humans are the things
that cause computers

70
00:03:14,920 --> 00:03:16,360
to start doing something.

71
00:03:16,360 --> 00:03:18,970
And this will sit here
happily until I've

72
00:03:18,970 --> 00:03:20,600
caused it to do something.

73
00:03:20,600 --> 00:03:23,158
Now, whoa.

74
00:03:23,158 --> 00:03:24,106
Whoa.

75
00:03:24,106 --> 00:03:25,900
Hope it's still OK.

76
00:03:25,900 --> 00:03:26,400
Yeah.

77
00:03:26,400 --> 00:03:28,530
Seems to be fine,
seems to be fine.

78
00:03:28,530 --> 00:03:30,510
Takes a licking and
keeps on ticking.

79
00:03:30,510 --> 00:03:33,910
So, these anyone can use, right?

80
00:03:33,910 --> 00:03:38,472
They say even animals can
use a Macintosh smartphone.

81
00:03:38,472 --> 00:03:40,180
And so you don't have
to be a programmer,

82
00:03:40,180 --> 00:03:43,790
but to get this to
do what you want,

83
00:03:43,790 --> 00:03:45,650
you need to learn a
different language.

84
00:03:45,650 --> 00:03:48,870
And we need to learn the
language of the instructions

85
00:03:48,870 --> 00:03:50,000
to tell it what to do.

86
00:03:50,000 --> 00:03:51,560
So, that's what
we're going to do.

87
00:03:51,560 --> 00:03:53,550
We're going to learn
how to talk to this.

88
00:03:53,550 --> 00:03:54,540
Yo!

89
00:03:54,540 --> 00:03:56,140
Because it's asking
us a question,

90
00:03:56,140 --> 00:03:59,880
and we have to give the answer.

91
00:03:59,880 --> 00:04:01,625
So, what's a programmer?

92
00:04:01,625 --> 00:04:05,070
A programmer is somebody
who writes a program, which

93
00:04:05,070 --> 00:04:08,000
is a script or a set
of instructions that

94
00:04:08,000 --> 00:04:11,400
tell one of these kinds of
things what it is that they're

95
00:04:11,400 --> 00:04:12,890
supposed to do.

96
00:04:12,890 --> 00:04:15,010
And sometimes you're
running a program

97
00:04:15,010 --> 00:04:18,010
like Moodle-- an open source
learning management system,

98
00:04:18,010 --> 00:04:21,029
or Sakai-- another open source
learning management system.

99
00:04:21,029 --> 00:04:23,480
And sometimes, you'll even
get paid to do that, right?

100
00:04:23,480 --> 00:04:25,560
Sometimes do it for free,
sometimes you get paid.

101
00:04:25,560 --> 00:04:27,495
Sometimes, you write
things for yourself.

102
00:04:27,495 --> 00:04:30,390

103
00:04:30,390 --> 00:04:32,900
But if you think about
it, all these applications

104
00:04:32,900 --> 00:04:35,635
on my iPhone, somebody's
making some money off of these.

105
00:04:35,635 --> 00:04:37,260
They may not be able
to quit their job,

106
00:04:37,260 --> 00:04:39,800
but a surprising number have
been able to quit their job

107
00:04:39,800 --> 00:04:41,240
or start small companies.

108
00:04:41,240 --> 00:04:45,480
Maybe not gigantic companies
but small companies.

109
00:04:45,480 --> 00:04:48,080
So these people that can
put applications inside

110
00:04:48,080 --> 00:04:49,630
of our computers
are programmers.

111
00:04:49,630 --> 00:04:51,760
Because they understand
the way that we

112
00:04:51,760 --> 00:04:54,230
talk to these computers.

113
00:04:54,230 --> 00:04:56,050
And part what I'm
going to try to do

114
00:04:56,050 --> 00:05:00,500
is to get you to move from the
mindset of the end user, who

115
00:05:00,500 --> 00:05:03,080
thinks of this as
something just to click on,

116
00:05:03,080 --> 00:05:04,840
to the mindset of
the programmer, who's

117
00:05:04,840 --> 00:05:08,790
kind of on the inside
trying to get out to you.

118
00:05:08,790 --> 00:05:11,380
So that's, as we move
from user to programmer,

119
00:05:11,380 --> 00:05:13,210
we move from outside to inside.

120
00:05:13,210 --> 00:05:14,711
And we think of the
world out there,

121
00:05:14,711 --> 00:05:16,501
and it's like, what
are they going to push?

122
00:05:16,501 --> 00:05:18,190
What button are
they going to push?

123
00:05:18,190 --> 00:05:20,960
So here's kind of
a picture of that.

124
00:05:20,960 --> 00:05:22,400
So on the outside, we're users.

125
00:05:22,400 --> 00:05:24,430
We click on buttons,
we click on websites,

126
00:05:24,430 --> 00:05:27,810
we click on buttons on our
phones, et cetera, et cetera.

127
00:05:27,810 --> 00:05:30,840
But what's really going
on inside of all that is

128
00:05:30,840 --> 00:05:34,430
there's a computer with a bunch
of hardware inside of that.

129
00:05:34,430 --> 00:05:39,020
And it has inside of it data,
networks, other information,

130
00:05:39,020 --> 00:05:44,720
and software-- is what
makes all that make sense.

131
00:05:44,720 --> 00:05:46,670
And so, part of what
I want you to do

132
00:05:46,670 --> 00:05:48,610
is I want you to stop
thinking about how

133
00:05:48,610 --> 00:05:50,600
to use these things
from the outside

134
00:05:50,600 --> 00:05:53,490
and we move to
becoming a programmer.

135
00:05:53,490 --> 00:05:54,770
We're someone on the inside.

136
00:05:54,770 --> 00:05:58,510
We are with the CPU,
we are with the memory,

137
00:05:58,510 --> 00:06:00,480
we are with the
network connection,

138
00:06:00,480 --> 00:06:02,760
we are doing things
on behalf of the user

139
00:06:02,760 --> 00:06:06,940
and presenting them
back up to the user.

140
00:06:06,940 --> 00:06:08,700
So why be a programmer?

141
00:06:08,700 --> 00:06:10,977
Now, this class is
specifically not

142
00:06:10,977 --> 00:06:13,060
trying to turn you into a
professional programmer.

143
00:06:13,060 --> 00:06:16,805
Even though I'd be very proud
if after five, ten more classes,

144
00:06:16,805 --> 00:06:18,180
you were professional
programmer,

145
00:06:18,180 --> 00:06:20,544
but that's not the
purpose of this class.

146
00:06:20,544 --> 00:06:22,460
Sometimes you just want
to get something done.

147
00:06:22,460 --> 00:06:24,480
You've got an Excel
spreadsheet at work,

148
00:06:24,480 --> 00:06:26,000
and the data is not right.

149
00:06:26,000 --> 00:06:27,610
You've got the data
from somebody else

150
00:06:27,610 --> 00:06:30,160
and it's got extra
spaces where it shouldn't

151
00:06:30,160 --> 00:06:32,584
have it or missing fields.

152
00:06:32,584 --> 00:06:34,250
Or something, you've
got to do something

153
00:06:34,250 --> 00:06:36,210
to it that Excel can't do.

154
00:06:36,210 --> 00:06:39,960
And you're stuck saying I
want to mess with this data

155
00:06:39,960 --> 00:06:41,620
and put in Excel
so I can do my job,

156
00:06:41,620 --> 00:06:44,036
but it's a pain in the neck
and I have to sit and bring it

157
00:06:44,036 --> 00:06:46,050
into a text editor
like Microsoft Word

158
00:06:46,050 --> 00:06:48,250
and go line by line and
make all kinds of mistakes

159
00:06:48,250 --> 00:06:49,650
and clean the data up.

160
00:06:49,650 --> 00:06:51,210
You can write a
program to do that.

161
00:06:51,210 --> 00:06:53,126
And that's kind of
programs we're going to do.

162
00:06:53,126 --> 00:06:55,600
Programs that serve our
needs inside the computer,

163
00:06:55,600 --> 00:06:56,950
but to serve our needs.

164
00:06:56,950 --> 00:07:00,470
Professional programmers tend
to build things for other people

165
00:07:00,470 --> 00:07:01,729
to use, right?

166
00:07:01,729 --> 00:07:03,770
They tend to build things
and everyone else does.

167
00:07:03,770 --> 00:07:08,510
But we're going to build
stuff primarily for ourselves.

168
00:07:08,510 --> 00:07:10,940
So, what is code?

169
00:07:10,940 --> 00:07:11,730
What is software?

170
00:07:11,730 --> 00:07:14,760
We use these words pretty much
independently-- a program.

171
00:07:14,760 --> 00:07:17,630
It's really a sequence
of stored instructions.

172
00:07:17,630 --> 00:07:20,420
We learn the language
that this talks,

173
00:07:20,420 --> 00:07:24,220
and then we will feed the
instructions in, one at a time.

174
00:07:24,220 --> 00:07:26,640
It takes them one at a time,
it gives us back a result,

175
00:07:26,640 --> 00:07:28,010
we give a next one.

176
00:07:28,010 --> 00:07:30,089
Give it back, in out, in out.

177
00:07:30,089 --> 00:07:32,130
So it's really a sequence
of stored instructions.

178
00:07:32,130 --> 00:07:35,000
But it's more than that.

179
00:07:35,000 --> 00:07:37,175
It's like our creativity.

180
00:07:37,175 --> 00:07:39,050
And if you've been using
some of my software,

181
00:07:39,050 --> 00:07:40,090
like my MOOC software.

182
00:07:40,090 --> 00:07:43,090
I spent about a month
writing all that stuff.

183
00:07:43,090 --> 00:07:45,140
And it's like, it's me.

184
00:07:45,140 --> 00:07:48,120
It's my vision of how cool
stuff ought to work, right?

185
00:07:48,120 --> 00:07:51,586
And so, it's more than just
getting something done.

186
00:07:51,586 --> 00:07:53,960
It's also a sense of pride
and a sense of accomplishment.

187
00:07:53,960 --> 00:07:55,250
Especially if you're
giving something

188
00:07:55,250 --> 00:07:56,710
that other people
can make use of.

189
00:07:56,710 --> 00:07:58,960
It's really-- I think
it's very creative.

190
00:07:58,960 --> 00:08:00,960
And it's what attracted
me to being a programmer

191
00:08:00,960 --> 00:08:01,810
in the first place.

192
00:08:01,810 --> 00:08:05,630
That I could leverage the
capabilities inside of here,

193
00:08:05,630 --> 00:08:08,940
and I could do things, the cool
things, on behalf of the user.

194
00:08:08,940 --> 00:08:13,620
So code, software, a program.

195
00:08:13,620 --> 00:08:19,530
So, let's get a non-technical
example of this.

196
00:08:19,530 --> 00:08:22,896
So, I'll have you link out
to the YouTube for this.

197
00:08:22,896 --> 00:08:25,010
This is the Macarena.

198
00:08:25,010 --> 00:08:30,470
The Macarena is a song that
has with it a well known dance

199
00:08:30,470 --> 00:08:33,970
that everyone seems to know, or
either get taught very quickly.

200
00:08:33,970 --> 00:08:37,289
So, I'll stop and let you
will watch the Macarena

201
00:08:37,289 --> 00:08:38,100
and then come back.

202
00:08:38,100 --> 00:08:41,280

203
00:08:41,280 --> 00:08:42,799
So welcome back.

204
00:08:42,799 --> 00:08:45,020
I hope you enjoyed that.

205
00:08:45,020 --> 00:08:48,690
In a sense, what we've
got there, is a program.

206
00:08:48,690 --> 00:08:51,220
A program for human beings.

207
00:08:51,220 --> 00:08:53,800
And maybe you learned that
the club or something and they

208
00:08:53,800 --> 00:08:55,380
told you what to do next.

209
00:08:55,380 --> 00:08:58,100
Well, I can teach you how to
do the Macarena by writing

210
00:08:58,100 --> 00:09:00,440
a simple program right now.

211
00:09:00,440 --> 00:09:02,850
So here's my Macarena.

212
00:09:02,850 --> 00:09:05,150
While the music plays, it
means you do it over and over

213
00:09:05,150 --> 00:09:06,469
and over again, to the beat.

214
00:09:06,469 --> 00:09:08,760
That's kind of like computers
they do things in a beat;

215
00:09:08,760 --> 00:09:11,110
they happen at 3
billion beats a second,

216
00:09:11,110 --> 00:09:14,204
but as it were-- we're going
to this multiple times.

217
00:09:14,204 --> 00:09:15,995
So we have this whole
group of instructions

218
00:09:15,995 --> 00:09:18,370
that we're going to do, right?

219
00:09:18,370 --> 00:09:20,690
Left hand out and
up, right hand out

220
00:09:20,690 --> 00:09:23,920
and up, flip left
hand, flip right hand,

221
00:09:23,920 --> 00:09:29,880
left hand to right shoulder,
right hand to left shoulder,

222
00:09:29,880 --> 00:09:31,180
et cetera, et cetera.

223
00:09:31,180 --> 00:09:36,250
Now, this particular little
program has a mistake in it.

224
00:09:36,250 --> 00:09:37,460
Actually several.

225
00:09:37,460 --> 00:09:40,440
I want you look and see if
you can find the mistakes

226
00:09:40,440 --> 00:09:41,065
in the program.

227
00:09:41,065 --> 00:09:48,330

228
00:09:48,330 --> 00:09:49,030
OK.

229
00:09:49,030 --> 00:09:52,400
So here are the places
that have the mistake.

230
00:09:52,400 --> 00:09:52,900
Right?

231
00:09:52,900 --> 00:09:59,030
The mistake is right ham
to the back of the head,

232
00:09:59,030 --> 00:10:03,040
and left hand to
right hit, not hip.

233
00:10:03,040 --> 00:10:06,340
Now, if you're in a
bar and you take a ham

234
00:10:06,340 --> 00:10:08,250
and you hit somebody in
the back of the head,

235
00:10:08,250 --> 00:10:11,490
that's not very nice when
you're dancing to this song.

236
00:10:11,490 --> 00:10:13,380
These are what's called bugs.

237
00:10:13,380 --> 00:10:16,750
Now, a human reading
this would say,

238
00:10:16,750 --> 00:10:20,010
I think they meant
to say hand here.

239
00:10:20,010 --> 00:10:22,500
But a computer is much
more literal than people.

240
00:10:22,500 --> 00:10:25,852
We'll see a couple of exercises
where we'll see that people can

241
00:10:25,852 --> 00:10:28,940
correct little mistakes
like this, but computers,

242
00:10:28,940 --> 00:10:29,940
they cannot.

243
00:10:29,940 --> 00:10:30,860
Right?

244
00:10:30,860 --> 00:10:32,891
So we have to fix these bugs.

245
00:10:32,891 --> 00:10:34,640
And we have to say,
right hand and we have

246
00:10:34,640 --> 00:10:36,260
to say, hip when we mean hip.

247
00:10:36,260 --> 00:10:37,400
So we have to be explicit.

248
00:10:37,400 --> 00:10:39,960
Computers do exactly
what we say they

249
00:10:39,960 --> 00:10:41,830
don't do what we mean to do.

250
00:10:41,830 --> 00:10:43,900
So let's clear that.

251
00:10:43,900 --> 00:10:45,690
Here's another example.

252
00:10:45,690 --> 00:10:48,010
OK, let's see how
this comes out.

253
00:10:48,010 --> 00:10:53,650

254
00:10:53,650 --> 00:10:56,590
You're supposed to count
the number of times

255
00:10:56,590 --> 00:11:01,290
the word "the" appears
in this sentence.

256
00:11:01,290 --> 00:11:03,360
Count it.

257
00:11:03,360 --> 00:11:04,900
The word "the", how many times?

258
00:11:04,900 --> 00:11:15,810

259
00:11:15,810 --> 00:11:17,816
OK.

260
00:11:17,816 --> 00:11:18,440
It's your turn.

261
00:11:18,440 --> 00:11:25,660

262
00:11:25,660 --> 00:11:31,360
Now here, this is not
something humans are good at.

263
00:11:31,360 --> 00:11:33,930
I moved it around, I played a
little music, I confused you,

264
00:11:33,930 --> 00:11:37,045
I put a picture of a clown car
in the upper left hand corner,

265
00:11:37,045 --> 00:11:39,350
et cetera, et cetera, et cetera.

266
00:11:39,350 --> 00:11:42,420
Now it turns out,
that computers,

267
00:11:42,420 --> 00:11:46,600
once we tell them what to do,
are very good at concentration.

268
00:11:46,600 --> 00:11:49,900
It can easily go
through 30 words

269
00:11:49,900 --> 00:11:53,020
and find the most common
word, or 3 million words

270
00:11:53,020 --> 00:11:54,350
and find the most common word.

271
00:11:54,350 --> 00:11:55,770
And it'll never make a mistake.

272
00:11:55,770 --> 00:11:58,780
But we first have to give
it a set of instructions.

273
00:11:58,780 --> 00:12:01,540
So, I don't want you to
learn this right now,

274
00:12:01,540 --> 00:12:03,780
but this is a Python program.

275
00:12:03,780 --> 00:12:08,890
Let's say that I wanted let
you count words in files, OK?

276
00:12:08,890 --> 00:12:11,430
I say, hey, I know
how to program Python.

277
00:12:11,430 --> 00:12:13,820
I'll send you an email and
I'll send you this program.

278
00:12:13,820 --> 00:12:17,720
Just stick it into Python and
it will count words for you.

279
00:12:17,720 --> 00:12:19,970
You got a million words,
a million lines in a file,

280
00:12:19,970 --> 00:12:23,990
you want to find the
most common word.

281
00:12:23,990 --> 00:12:27,230
So I will send you this
file called words.py.

282
00:12:27,230 --> 00:12:29,890
I spent little time, it's
a friendly gift to you.

283
00:12:29,890 --> 00:12:31,590
And this is what I
type in-- now I'll

284
00:12:31,590 --> 00:12:34,060
give you kind of outline on
what this is going to do.

285
00:12:34,060 --> 00:12:37,160
The first thing it's going to
do is open the file and read it.

286
00:12:37,160 --> 00:12:40,540
Then it's going to split
the lines and files

287
00:12:40,540 --> 00:12:42,880
into words based on the spaces.

288
00:12:42,880 --> 00:12:46,730
Then it's going to run through
and accumulate numbers like,

289
00:12:46,730 --> 00:12:48,850
this word is one,
this word is one,

290
00:12:48,850 --> 00:12:50,974
oh I saw that one again
so I turned that to two.

291
00:12:50,974 --> 00:12:51,890
That's what this does.

292
00:12:51,890 --> 00:12:53,848
It's a loop, it goes
round and round and round,

293
00:12:53,848 --> 00:12:55,440
one for each word.

294
00:12:55,440 --> 00:12:58,530
Then what we're going to
do is write another loop

295
00:12:58,530 --> 00:13:01,120
that's going to figure out
which is the most common word,

296
00:13:01,120 --> 00:13:03,450
by looking through all
those little histograms

297
00:13:03,450 --> 00:13:04,540
that we built up.

298
00:13:04,540 --> 00:13:07,900
And then it's going to print
those things are very end.

299
00:13:07,900 --> 00:13:11,330
And this can certainly
do Python words.py

300
00:13:11,330 --> 00:13:14,660
and read clown.txt and tell
us that the word "the" occurs

301
00:13:14,660 --> 00:13:15,840
seven times.

302
00:13:15,840 --> 00:13:19,960
But it can find out that a
different thing as the word

303
00:13:19,960 --> 00:13:21,730
"two" and it occurs 16 times.

304
00:13:21,730 --> 00:13:24,287
And it's just as fast.

305
00:13:24,287 --> 00:13:25,870
So yeah, you have
to learn a language,

306
00:13:25,870 --> 00:13:28,780
and you have to tell it
what to do, but once you do,

307
00:13:28,780 --> 00:13:31,950
it'll do it for a million or a
billion words, and be happily.

308
00:13:31,950 --> 00:13:34,890
And so you don't have
to do menial work,

309
00:13:34,890 --> 00:13:37,230
once you understand the way
to instruct the computer

310
00:13:37,230 --> 00:13:40,529
to do menial work.

311
00:13:40,529 --> 00:13:41,570
[IMITATES KEYBOARD CLICK]

312
00:13:41,570 --> 00:13:45,890
So, we always start
all programming classes

313
00:13:45,890 --> 00:13:47,980
with hardware architecture.

314
00:13:47,980 --> 00:13:51,250
I don't think it's essential, so
don't get too excited about it.

315
00:13:51,250 --> 00:13:53,600
It's a good use of terminology.

316
00:13:53,600 --> 00:13:55,520
So we can have some
words say like, CPU,

317
00:13:55,520 --> 00:13:56,880
and you don't freak out.

318
00:13:56,880 --> 00:14:00,842
Or memory, or RAM, or disk
drive, and you don't freak out.

319
00:14:00,842 --> 00:14:02,550
I don't want to turn
into a hardware nut,

320
00:14:02,550 --> 00:14:04,557
I just want you to
have a few words,

321
00:14:04,557 --> 00:14:06,390
so we can talk about
what's going on inside.

322
00:14:06,390 --> 00:14:09,640
Because, in a sense, we're going
to be writing programs to do

323
00:14:09,640 --> 00:14:12,390
stuff-- both data,
instructions, et cetera.

324
00:14:12,390 --> 00:14:15,620

325
00:14:15,620 --> 00:14:18,120
Here's some hardware that I
just bought a couple weeks ago,

326
00:14:18,120 --> 00:14:19,540
and I'm really in love with.

327
00:14:19,540 --> 00:14:21,520
And that is the Raspberry Pi.

328
00:14:21,520 --> 00:14:25,240
This is a single board computer.

329
00:14:25,240 --> 00:14:28,870
It's got storage on an SD card.

330
00:14:28,870 --> 00:14:29,660
Right there.

331
00:14:29,660 --> 00:14:31,800
That's the operating
system and the data.

332
00:14:31,800 --> 00:14:35,290
And it's got the both
the microprocessor,

333
00:14:35,290 --> 00:14:37,240
and the memory is
in here as well,

334
00:14:37,240 --> 00:14:40,370
and it looks up with USB
and HDMI and various things.

335
00:14:40,370 --> 00:14:41,780
And, if you want,
in this course,

336
00:14:41,780 --> 00:14:45,500
you probably can do all the
homework using a Raspberry Pi,

337
00:14:45,500 --> 00:14:47,610
if you so desire.

338
00:14:47,610 --> 00:14:49,610
So, this is what hardware
really looks like.

339
00:14:49,610 --> 00:14:51,250
It's kind of the
inside of something.

340
00:14:51,250 --> 00:14:53,790
Normally it's inside of a case
and you don't get to see it.

341
00:14:53,790 --> 00:14:55,040
And that's what it looks like.

342
00:14:55,040 --> 00:14:59,400
It's kind of got this green
and little silver and gold.

343
00:14:59,400 --> 00:15:02,560
I think they're very beautiful.

344
00:15:02,560 --> 00:15:03,815
They're very pretty.

345
00:15:03,815 --> 00:15:05,940
A lot of engineering goes
into making these things.

346
00:15:05,940 --> 00:15:08,920

347
00:15:08,920 --> 00:15:12,960
And so, we have a block diagram
of what's going on in here.

348
00:15:12,960 --> 00:15:16,010
And there just some terminology.

349
00:15:16,010 --> 00:15:21,130
The brains of it all-- well, we
draw this block diagram partly

350
00:15:21,130 --> 00:15:24,110
because-- and this is
a, from a-- oh, parts

351
00:15:24,110 --> 00:15:27,710
are coming off of this.

352
00:15:27,710 --> 00:15:29,010
I don't know what that was.

353
00:15:29,010 --> 00:15:31,360
It's OK, it's broken anyways.

354
00:15:31,360 --> 00:15:32,860
If you have a desktop
computer, this

355
00:15:32,860 --> 00:15:34,484
is more like what it
looks like inside.

356
00:15:34,484 --> 00:15:36,225
This part is called
a motherboard.

357
00:15:36,225 --> 00:15:38,370
And it's kind of like
the thing that connects

358
00:15:38,370 --> 00:15:40,197
and brings everything together.

359
00:15:40,197 --> 00:15:41,280
It's got a bunch of wires.

360
00:15:41,280 --> 00:15:44,100
Each one of those little
lines here is a wire.

361
00:15:44,100 --> 00:15:46,040
It's covered with a lacquer.

362
00:15:46,040 --> 00:15:48,180
And then, there are things
to penetrate the board

363
00:15:48,180 --> 00:15:50,910
and then connect
to various chips.

364
00:15:50,910 --> 00:15:54,630
And this whole thing is
what this picture is,

365
00:15:54,630 --> 00:15:58,207
but it really is connecting a
number of different components.

366
00:15:58,207 --> 00:15:59,790
The central processing
unit, that I've

367
00:15:59,790 --> 00:16:03,220
spoken of before-- put that
back down-- central processing

368
00:16:03,220 --> 00:16:06,470
unit is the closest thing
to computer has to a brain.

369
00:16:06,470 --> 00:16:08,330
But it's barely a
brain; it's really

370
00:16:08,330 --> 00:16:11,650
just a super fast
programmable calculator.

371
00:16:11,650 --> 00:16:13,820
We make it flexible
by our creativity

372
00:16:13,820 --> 00:16:14,800
when we write programs.

373
00:16:14,800 --> 00:16:16,420
We make it seem intelligent.

374
00:16:16,420 --> 00:16:17,920
It's people that
make an intelligent

375
00:16:17,920 --> 00:16:21,080
by taking our own knowledge
and putting it in.

376
00:16:21,080 --> 00:16:22,860
This is not,
itself, intelligent.

377
00:16:22,860 --> 00:16:24,670
There's nothing
to fear from this.

378
00:16:24,670 --> 00:16:27,050
It's just not that smart.

379
00:16:27,050 --> 00:16:29,580
So, this is the thing
that's program to ask

380
00:16:29,580 --> 00:16:31,450
the question, what's next?

381
00:16:31,450 --> 00:16:33,800
And then we have to have
a set of instructions

382
00:16:33,800 --> 00:16:36,420
that feed this thing really
fast-- billions of times

383
00:16:36,420 --> 00:16:37,470
a second.

384
00:16:37,470 --> 00:16:38,610
And that's what this.

385
00:16:38,610 --> 00:16:40,580
This is the random
access memory.

386
00:16:40,580 --> 00:16:43,620
And we have memory chips and
they're connected together

387
00:16:43,620 --> 00:16:45,000
through the motherboard.

388
00:16:45,000 --> 00:16:49,500
So we have the main memory and
we have the central processing

389
00:16:49,500 --> 00:16:50,070
unit.

390
00:16:50,070 --> 00:16:53,630
And this is where our high
speed instructions come from,

391
00:16:53,630 --> 00:16:55,550
this where a high
speed data is stored,

392
00:16:55,550 --> 00:16:57,460
and this is the thing
that asks, what next?

393
00:16:57,460 --> 00:16:59,127
And it reads its
instructions from here.

394
00:16:59,127 --> 00:17:01,501
And you see that can-- boop--
they're not quite connected

395
00:17:01,501 --> 00:17:03,910
together, but eventually
they're connecting together.

396
00:17:03,910 --> 00:17:06,230
Don't feel too bad about
this hardware, it's all old,

397
00:17:06,230 --> 00:17:08,890
and it's all broken
and can't be hurt.

398
00:17:08,890 --> 00:17:12,810
So, the next thing we got
is input/output device.

399
00:17:12,810 --> 00:17:14,720
I'll go back to my Raspberry Pi.

400
00:17:14,720 --> 00:17:17,550
So the Raspberry Pi
has a USB that you can

401
00:17:17,550 --> 00:17:20,060
connect a mouse or a keyboard.

402
00:17:20,060 --> 00:17:24,220
It has an HDMI that you
can connect a monitor to,

403
00:17:24,220 --> 00:17:25,640
it has an ethernet connector.

404
00:17:25,640 --> 00:17:30,160
So these are all examples
of input/output devices.

405
00:17:30,160 --> 00:17:32,806

406
00:17:32,806 --> 00:17:36,930
And then, the last thing on the
screen is the secondary memory.

407
00:17:36,930 --> 00:17:39,660
So this RAM, on
the Raspberry Pi,

408
00:17:39,660 --> 00:17:42,390
the CPU, the central
processing unit, and the RAM

409
00:17:42,390 --> 00:17:44,570
are all in this one
chip in the middle.

410
00:17:44,570 --> 00:17:46,670
It's called SoC, or
system on a chip,

411
00:17:46,670 --> 00:17:49,080
where they put more parts there.

412
00:17:49,080 --> 00:17:56,510
So in a sense, they've
collapsed this and this,

413
00:17:56,510 --> 00:18:02,110
and a lot of this, all down in a
Raspberry Pi to one little guy.

414
00:18:02,110 --> 00:18:04,530
But it's still architecturally
the same thing.

415
00:18:04,530 --> 00:18:05,977
There's a central
processing unit.

416
00:18:05,977 --> 00:18:06,810
There's main memory.

417
00:18:06,810 --> 00:18:11,170
There's graphics
cards, et cetera.

418
00:18:11,170 --> 00:18:13,410
So input/output
devices-- oh and this guy

419
00:18:13,410 --> 00:18:17,580
has input/output devices, too,
like USB, keyboard, monitor, et

420
00:18:17,580 --> 00:18:18,080
cetera.

421
00:18:18,080 --> 00:18:20,530
So there are very similar,
it's just this is new

422
00:18:20,530 --> 00:18:21,890
and this is old.

423
00:18:21,890 --> 00:18:25,370
Everything gets smaller
when it gets newer.

424
00:18:25,370 --> 00:18:25,870
OK.

425
00:18:25,870 --> 00:18:29,060

426
00:18:29,060 --> 00:18:31,250
OK, so last thing we're
going to talk about

427
00:18:31,250 --> 00:18:32,670
is the secondary memory.

428
00:18:32,670 --> 00:18:35,430

429
00:18:35,430 --> 00:18:38,850
When the power goes off,
these things sort of go away.

430
00:18:38,850 --> 00:18:40,990
The data in this RAM goes away.

431
00:18:40,990 --> 00:18:44,550
It's just designed to be
really fast, but not permanent.

432
00:18:44,550 --> 00:18:46,190
So we need a place
that's permanent.

433
00:18:46,190 --> 00:18:47,710
That's what
secondary storage is.

434
00:18:47,710 --> 00:18:50,370
That's what this
secondary storage is for.

435
00:18:50,370 --> 00:18:52,640
This is permanent.

436
00:18:52,640 --> 00:18:55,340
This is fast.

437
00:18:55,340 --> 00:18:58,515
And it cha cha cha
cha really fast.

438
00:18:58,515 --> 00:19:01,450
But this is permanent
and this is slower.

439
00:19:01,450 --> 00:19:02,000
OK?

440
00:19:02,000 --> 00:19:03,475
So the secondary
memory-- you got

441
00:19:03,475 --> 00:19:08,030
two kinds of secondary memory--
oh, dropped it on the floor.

442
00:19:08,030 --> 00:19:09,840
Two kinds of a secondary memory.

443
00:19:09,840 --> 00:19:11,575
I'll start with
the Raspberry Pi.

444
00:19:11,575 --> 00:19:16,010
The secondary memory of the
Raspberry Pi is this SD card.

445
00:19:16,010 --> 00:19:17,470
It's like a disk drive.

446
00:19:17,470 --> 00:19:20,560
It still is permanent,
does not require power

447
00:19:20,560 --> 00:19:23,180
to maintain it's data,
the data stays permanent.

448
00:19:23,180 --> 00:19:27,210
So in the future, we will
see more of these flash style

449
00:19:27,210 --> 00:19:29,300
drives and SD style drives.

450
00:19:29,300 --> 00:19:32,160
So the Raspberry Pi is kind
of alluding to the future.

451
00:19:32,160 --> 00:19:33,770
There's a disk drive in here.

452
00:19:33,770 --> 00:19:36,340
It's not really a disk,
it's also flash memory.

453
00:19:36,340 --> 00:19:42,620
But in the old days, in the good
old days back when I was a kid,

454
00:19:42,620 --> 00:19:47,220
our secondary memory
was a disk drive.

455
00:19:47,220 --> 00:19:50,123
And it had platters,
and it spun,

456
00:19:50,123 --> 00:19:52,850
and it made a satisfying noise.

457
00:19:52,850 --> 00:19:54,710
And it would move in
and out to read data.

458
00:19:54,710 --> 00:19:57,290
And I'll show you a
video of this just a bit.

459
00:19:57,290 --> 00:20:00,200
And so these would record the
data on the magnetic platters,

460
00:20:00,200 --> 00:20:01,700
and then when the
power's taken off,

461
00:20:01,700 --> 00:20:03,470
the data would
still be magnetized.

462
00:20:03,470 --> 00:20:05,590
And then it would go and
move to the right spot,

463
00:20:05,590 --> 00:20:07,450
spin it around,
and read the data.

464
00:20:07,450 --> 00:20:11,840
And again, this is kind of
messed up in a pretty bad way.

465
00:20:11,840 --> 00:20:14,410
So, there we go.

466
00:20:14,410 --> 00:20:18,870
Central processing unit
brings the operation.

467
00:20:18,870 --> 00:20:23,040
Main memory, fast but goes
away when we power off.

468
00:20:23,040 --> 00:20:25,120
Input/output devices--
keyboards, et cetera.

469
00:20:25,120 --> 00:20:30,850
And then storage that maintains
its data across power cycles.

470
00:20:30,850 --> 00:20:31,940
OK.

471
00:20:31,940 --> 00:20:36,250
And, I just said all that, OK?

472
00:20:36,250 --> 00:20:40,410
So then, the question is,
where do you belong in this?

473
00:20:40,410 --> 00:20:41,670
Where do programs live?

474
00:20:41,670 --> 00:20:43,060
Where do we write?

475
00:20:43,060 --> 00:20:47,300
And the answer is, we
live in the memory, right?

476
00:20:47,300 --> 00:20:51,490
What we do is, we put our
programs into the memory,

477
00:20:51,490 --> 00:20:55,370
and then the CPU pulls the
programs out of the memory.

478
00:20:55,370 --> 00:20:58,600
So we have to write our programs
and put them into the memory.

479
00:20:58,600 --> 00:21:00,242
When we start them
and run them, we're

480
00:21:00,242 --> 00:21:01,700
really loading them
into the memory

481
00:21:01,700 --> 00:21:04,800
so they can be fed
rapidly to the CPU.

482
00:21:04,800 --> 00:21:06,970
Now the computers
don't really execute

483
00:21:06,970 --> 00:21:09,700
Python, like, if x
less than 3, print,

484
00:21:09,700 --> 00:21:11,500
but that's what we
tend to want to write.

485
00:21:11,500 --> 00:21:14,130
Because what the computers
really execute is this thing

486
00:21:14,130 --> 00:21:17,620
called machine languages,
which is a series of 0s and 1s

487
00:21:17,620 --> 00:21:19,590
that pretty much
translate directly

488
00:21:19,590 --> 00:21:21,010
to what's on these pins.

489
00:21:21,010 --> 00:21:24,020
There's voltages
that go up and down.

490
00:21:24,020 --> 00:21:25,930
That's called machine language.

491
00:21:25,930 --> 00:21:29,920
Source code, like
Python, is written

492
00:21:29,920 --> 00:21:31,300
in a way that's most convenient.

493
00:21:31,300 --> 00:21:33,380
Well, at least more convenient.

494
00:21:33,380 --> 00:21:36,780
Machine language is what's most
convenient for the hardware.

495
00:21:36,780 --> 00:21:39,380
So we have to translate
from source code

496
00:21:39,380 --> 00:21:40,270
to machine language.

497
00:21:40,270 --> 00:21:42,820
And that's what the Python
program does for us.

498
00:21:42,820 --> 00:21:45,420
We write in Python,
and Python translates

499
00:21:45,420 --> 00:21:47,090
to machine language for us.

500
00:21:47,090 --> 00:21:49,350
So I got a couple of
videos they give you

501
00:21:49,350 --> 00:21:52,680
a sense of how this all works.

502
00:21:52,680 --> 00:21:55,549
We'll start with CPU.

503
00:21:55,549 --> 00:21:57,090
And what this is
going to do, is this

504
00:21:57,090 --> 00:21:59,660
is going to show you
the intensity of how

505
00:21:59,660 --> 00:22:01,990
much electricity--
that thing that

506
00:22:01,990 --> 00:22:05,000
gets hot inside your computer
is this little guy right here.

507
00:22:05,000 --> 00:22:07,765
And we're going to see in this
video just how hot it can get.

508
00:22:07,765 --> 00:22:15,140

509
00:22:15,140 --> 00:22:17,189
OK, so welcome back.

510
00:22:17,189 --> 00:22:18,980
So the next thing I'm
going to show you-- I

511
00:22:18,980 --> 00:22:21,260
showed you a hard
disk that didn't work,

512
00:22:21,260 --> 00:22:22,760
but we're actually
going to show you

513
00:22:22,760 --> 00:22:26,160
real short video on
how a hard disk works

514
00:22:26,160 --> 00:22:28,720
that someone took the cover
off and actually applied power

515
00:22:28,720 --> 00:22:29,350
to it.

516
00:22:29,350 --> 00:22:30,808
You don't want to
do this yourself,

517
00:22:30,808 --> 00:22:32,310
if you have a hard drive.

518
00:22:32,310 --> 00:22:35,780
I've read, and some people
say, that you can do it

519
00:22:35,780 --> 00:22:38,400
for a few minutes
and then the drive

520
00:22:38,400 --> 00:22:41,720
destroys itself if you
run it with the cover off.

521
00:22:41,720 --> 00:22:42,940
So let's take a look at this.

522
00:22:42,940 --> 00:22:53,300

523
00:22:53,300 --> 00:23:00,600
OK, so now we're going to talk
a little bit about Python.

524
00:23:00,600 --> 00:23:02,820
Python is a
programming language.

525
00:23:02,820 --> 00:23:06,870
Python is a way
that we communicate.

526
00:23:06,870 --> 00:23:09,400
Now, Python wasn't
invented by computers.

527
00:23:09,400 --> 00:23:12,980
We invented Python,
as humans, as a way

528
00:23:12,980 --> 00:23:14,960
to encapsulate our instructions.

529
00:23:14,960 --> 00:23:17,560
There's lots of different
programming languages-- Python,

530
00:23:17,560 --> 00:23:21,194
JavaScript C++, tons of them.

531
00:23:21,194 --> 00:23:22,610
Python is just one
of them that we

532
00:23:22,610 --> 00:23:26,140
happen to teach in this class.

533
00:23:26,140 --> 00:23:28,640
Now, I'll start with a little
Harry Potter reference.

534
00:23:28,640 --> 00:23:31,410
Parseltongue is the language
of serpents and those

535
00:23:31,410 --> 00:23:33,720
who converse with them.

536
00:23:33,720 --> 00:23:35,810
An individual who can
speak Parseltongue

537
00:23:35,810 --> 00:23:37,220
is known as a Parselmouth.

538
00:23:37,220 --> 00:23:40,470
And it's a very uncommon skill
and maybe even hereditary.

539
00:23:40,470 --> 00:23:42,540
Nearly all known
Parselmouth are descended

540
00:23:42,540 --> 00:23:44,690
from Salazar Slytherin.

541
00:23:44,690 --> 00:23:47,100
There's our Harry
Potter reference.

542
00:23:47,100 --> 00:23:50,640
Python is the language
of the Python interpreter

543
00:23:50,640 --> 00:23:52,750
and those who can
converse with it.

544
00:23:52,750 --> 00:23:55,130
We are going to converse
with the inside of a computer

545
00:23:55,130 --> 00:23:56,320
pretty soon.

546
00:23:56,320 --> 00:23:58,040
An individual who
can speak Python,

547
00:23:58,040 --> 00:24:00,080
is known as a Pythonista.

548
00:24:00,080 --> 00:24:03,520
It is an uncommon skill
and may be hereditary.

549
00:24:03,520 --> 00:24:05,210
May not be hereditary, too.

550
00:24:05,210 --> 00:24:08,630
Nearly all known Pythonistas
use software initially developed

551
00:24:08,630 --> 00:24:10,720
by Guido van Rossum.

552
00:24:10,720 --> 00:24:13,250
Guido van Rossum,
this guy right here.

553
00:24:13,250 --> 00:24:15,354
Yo, Guido, what's up?

554
00:24:15,354 --> 00:24:16,520
Let's put a mustache on him.

555
00:24:16,520 --> 00:24:17,950
Yo, Guido.

556
00:24:17,950 --> 00:24:18,460
Sorry.

557
00:24:18,460 --> 00:24:19,810
I should be nice to him.

558
00:24:19,810 --> 00:24:21,320
He is the inventor of Python.

559
00:24:21,320 --> 00:24:23,660
Python's over 20 years old.

560
00:24:23,660 --> 00:24:27,000
He invented it to make
it an easy language,

561
00:24:27,000 --> 00:24:28,500
but was both easy and powerful.

562
00:24:28,500 --> 00:24:30,350
And that's why it's
a great language

563
00:24:30,350 --> 00:24:32,780
to start your learning with.

564
00:24:32,780 --> 00:24:34,530
It's a powerful
language, but it's also

565
00:24:34,530 --> 00:24:36,770
designed to be easy to use.

566
00:24:36,770 --> 00:24:41,616
Can anyone guess what the reason
for the Python language name

567
00:24:41,616 --> 00:24:42,115
is?

568
00:24:42,115 --> 00:24:54,290

569
00:24:54,290 --> 00:24:55,210
So, let's see.

570
00:24:55,210 --> 00:24:59,540

571
00:24:59,540 --> 00:25:03,570
Python was named after
a famous British comedy

572
00:25:03,570 --> 00:25:08,330
show that was in the '60s
and '70s and '80s I think,

573
00:25:08,330 --> 00:25:09,360
named Monty Python.

574
00:25:09,360 --> 00:25:11,320
Monty Python's Flying Circus.

575
00:25:11,320 --> 00:25:15,160
And so, I think he
was trying to capture

576
00:25:15,160 --> 00:25:19,780
a playfulness, a certain kind
of silly, fun aspect of Python.

577
00:25:19,780 --> 00:25:22,075
And, so there we go.

578
00:25:22,075 --> 00:25:22,700
Enough of that.

579
00:25:22,700 --> 00:25:23,220
We done?

580
00:25:23,220 --> 00:25:23,720
Yeah.

581
00:25:23,720 --> 00:25:25,075
OK, the music's done now.

582
00:25:25,075 --> 00:25:26,490
Thank Heaven for that.

583
00:25:26,490 --> 00:25:27,890
OK.

584
00:25:27,890 --> 00:25:29,770
So again, this is a language.

585
00:25:29,770 --> 00:25:31,920
And this Guido,
he made it for us.

586
00:25:31,920 --> 00:25:33,850
He made choices.

587
00:25:33,850 --> 00:25:35,560
He said, we're going
to put a colon here,

588
00:25:35,560 --> 00:25:37,527
and I think we should,
like, indent this

589
00:25:37,527 --> 00:25:38,360
and do these things.

590
00:25:38,360 --> 00:25:40,720
And he's made choices.

591
00:25:40,720 --> 00:25:43,710
And some languages, people
like some different,

592
00:25:43,710 --> 00:25:44,750
or better than others.

593
00:25:44,750 --> 00:25:47,440
It's kind of an artistic choice.

594
00:25:47,440 --> 00:25:52,270
And I like to equate this to
learning a language to speak

595
00:25:52,270 --> 00:25:56,697
with people, with humans

596
00:25:56,697 --> 00:25:58,530
When we're a baby, we
don't know how to talk

597
00:25:58,530 --> 00:26:01,190
and we start babbling--
baba blah blah blah blah.

598
00:26:01,190 --> 00:26:05,710
Maybe we even just start
crying is first thing we do.

599
00:26:05,710 --> 00:26:07,970
But we're on this
strange planet.

600
00:26:07,970 --> 00:26:09,776
We've got to talk to this thing.

601
00:26:09,776 --> 00:26:11,150
So we have to
learn its language.

602
00:26:11,150 --> 00:26:13,090
And we're not going to
learn it right away.

603
00:26:13,090 --> 00:26:14,806
You don't go like,
hey, study all night

604
00:26:14,806 --> 00:26:15,930
and you know this language.

605
00:26:15,930 --> 00:26:17,480
There's no way you can do that.

606
00:26:17,480 --> 00:26:17,980
Although.

607
00:26:17,980 --> 00:26:20,271
Rosetta Stone might be a good
way to teach programming.

608
00:26:20,271 --> 00:26:22,335
Maybe I should take
some of their ideas.

609
00:26:22,335 --> 00:26:25,200

610
00:26:25,200 --> 00:26:27,820
So, the thing that's
different about learning

611
00:26:27,820 --> 00:26:31,340
a human language versus
learning a programming language,

612
00:26:31,340 --> 00:26:33,750
is that when we're
learning a human language,

613
00:26:33,750 --> 00:26:35,390
we're talking to a
human and they're

614
00:26:35,390 --> 00:26:36,640
going to do correction for us.

615
00:26:36,640 --> 00:26:43,251
So, if I say a word
incorrectly like, [SLURS WORD].

616
00:26:43,251 --> 00:26:43,750
Right?

617
00:26:43,750 --> 00:26:45,294
I don't know, that
was pretty dumb.

618
00:26:45,294 --> 00:26:47,460
Someone listening will say,
oh, I know what he said,

619
00:26:47,460 --> 00:26:48,380
I know what he said.

620
00:26:48,380 --> 00:26:53,140
But Python and computers
aren't really listening.

621
00:26:53,140 --> 00:26:54,240
They're kind of dumb.

622
00:26:54,240 --> 00:26:57,590
They can't really correct our
mistakes for us because they

623
00:26:57,590 --> 00:27:01,220
don't know what we're trying
to say; they really don't.

624
00:27:01,220 --> 00:27:03,450
They're very literal.

625
00:27:03,450 --> 00:27:11,630
And so, it is really common
in the beginning to get upset.

626
00:27:11,630 --> 00:27:16,060
Because we say something we
think it's cute, and it says,

627
00:27:16,060 --> 00:27:17,600
syntax error.

628
00:27:17,600 --> 00:27:20,140
And we go like, OK,
let me try this--

629
00:27:20,140 --> 00:27:21,754
and it says syntax error.

630
00:27:21,754 --> 00:27:23,920
And so, we get this notion--
I had this problem when

631
00:27:23,920 --> 00:27:25,270
I was first programming.

632
00:27:25,270 --> 00:27:27,830
I would like, here's my
program, do you like it?

633
00:27:27,830 --> 00:27:30,240
And it would say, syntax error.

634
00:27:30,240 --> 00:27:34,060
Now, the problem is they could
reword the messages to be

635
00:27:34,060 --> 00:27:35,820
a little nicer, perhaps.

636
00:27:35,820 --> 00:27:38,280
But the syntax error isn't
really a judgment on you

637
00:27:38,280 --> 00:27:39,860
that says you're a failure.

638
00:27:39,860 --> 00:27:43,170
The syntax error
is really saying,

639
00:27:43,170 --> 00:27:46,570
I don't know what you're
saying, I'm confused,

640
00:27:46,570 --> 00:27:50,380
I only know a few things,
and what you just said

641
00:27:50,380 --> 00:27:52,570
is not something I understand.

642
00:27:52,570 --> 00:27:55,600
So instead of thinking of
the program, the Python,

643
00:27:55,600 --> 00:28:00,090
as some kind of evil, demonic
monster that just hates

644
00:28:00,090 --> 00:28:02,640
you and just keeps
saying, syntax error--

645
00:28:02,640 --> 00:28:06,580
think of Python more like a dog.

646
00:28:06,580 --> 00:28:08,850
Right?

647
00:28:08,850 --> 00:28:09,840
Can you talk to a dog?

648
00:28:09,840 --> 00:28:14,220
Can you say, lovely sunset
we're having, to a dog.

649
00:28:14,220 --> 00:28:16,490
Because dog's not going
to understand that.

650
00:28:16,490 --> 00:28:21,920
The dog does understand some
things like, food, bath, walk.

651
00:28:21,920 --> 00:28:24,260
But it doesn't understand
the accumulated works

652
00:28:24,260 --> 00:28:25,900
of Shakespeare.

653
00:28:25,900 --> 00:28:27,640
So when you talk
to a dog, you got

654
00:28:27,640 --> 00:28:30,960
to be careful to talk the
subset of the vocabulary

655
00:28:30,960 --> 00:28:32,320
that the dog knows.

656
00:28:32,320 --> 00:28:37,030
And so, this is a key thing,
when you're first learning,

657
00:28:37,030 --> 00:28:39,690
there's only certain set of
things that Python understands.

658
00:28:39,690 --> 00:28:41,970
It turns out, it's
easier to teach you

659
00:28:41,970 --> 00:28:44,980
Python, than to teach
Python to listen

660
00:28:44,980 --> 00:28:47,390
to whatever you have to say.

661
00:28:47,390 --> 00:28:50,210
Things like Google make
it seem intelligent,

662
00:28:50,210 --> 00:28:53,120
so that you kind of type
anything to Google, right?

663
00:28:53,120 --> 00:28:56,300
Well, yeah, billions of dollars
later, Google for at least

664
00:28:56,300 --> 00:28:58,430
like short things,
can seem like it knows

665
00:28:58,430 --> 00:29:01,200
what you're talking about.

666
00:29:01,200 --> 00:29:03,780
In terms of programming,
it's a lot easier for you

667
00:29:03,780 --> 00:29:07,270
to figure out the exact, precise
way to say it, rather than make

668
00:29:07,270 --> 00:29:10,095
it so that we have to spend a
billion dollars on something

669
00:29:10,095 --> 00:29:13,300
like Python to figure out what
you mean in your programs.

670
00:29:13,300 --> 00:29:17,870
So, let's start
talking to Python.

671
00:29:17,870 --> 00:29:19,640
We're talking to Python.

672
00:29:19,640 --> 00:29:22,700
So if you've installed
Python properly,

673
00:29:22,700 --> 00:29:27,440
whether it's on a Mac or a
Windows or on a Raspberry Pi,

674
00:29:27,440 --> 00:29:30,020
at some point you'll be
in a terminal program

675
00:29:30,020 --> 00:29:34,196
and you'll type Python to make
Python run in interactive mode.

676
00:29:34,196 --> 00:29:36,570
You might have type C colon
backslash something something

677
00:29:36,570 --> 00:29:38,170
Python in Windows.

678
00:29:38,170 --> 00:29:40,730
But at some point,
you're running Python.

679
00:29:40,730 --> 00:29:43,270
Now Python, itself,
is a program.

680
00:29:43,270 --> 00:29:45,840
It's a program
that is asking you

681
00:29:45,840 --> 00:29:47,701
to type the Python language.

682
00:29:47,701 --> 00:29:49,200
Now the interesting
thing is, you've

683
00:29:49,200 --> 00:29:53,640
got this Chevron
prompt here, and it's

684
00:29:53,640 --> 00:29:55,810
kind of another
version of what's next.

685
00:29:55,810 --> 00:29:57,260
I told you that
this hardware was

686
00:29:57,260 --> 00:30:01,020
designed to always want the
next instruction to come in.

687
00:30:01,020 --> 00:30:04,540
Well, Python, once we
start it, it really

688
00:30:04,540 --> 00:30:05,620
has no idea what to do.

689
00:30:05,620 --> 00:30:08,960
It is waiting for you
tell it what to do, OK?

690
00:30:08,960 --> 00:30:13,730
So, let me see if I can
pop something up here.

691
00:30:13,730 --> 00:30:14,790
So here we go.

692
00:30:14,790 --> 00:30:16,510
Clear that.

693
00:30:16,510 --> 00:30:20,610
And now I'm going to type--
get this a little closer--

694
00:30:20,610 --> 00:30:21,900
I'm going to start Python.

695
00:30:21,900 --> 00:30:24,450
So it's the operating system
now is asking me, what next?

696
00:30:24,450 --> 00:30:26,590
And I'm saying, oh, the
thing I want to do next

697
00:30:26,590 --> 00:30:29,420
is I want to run Python.

698
00:30:29,420 --> 00:30:30,690
So, here we are.

699
00:30:30,690 --> 00:30:32,750
We're sitting in the
Python interpreter.

700
00:30:32,750 --> 00:30:36,360
And it's asking, what next?

701
00:30:36,360 --> 00:30:37,320
OK?

702
00:30:37,320 --> 00:30:43,160
Now, it's like I just
landed on a planet,

703
00:30:43,160 --> 00:30:48,620
and it's like, take
me to your leader.

704
00:30:48,620 --> 00:30:51,460

705
00:30:51,460 --> 00:30:52,890
Take me to your leader.

706
00:30:52,890 --> 00:30:55,240
That's what you always say
when you land on a planet

707
00:30:55,240 --> 00:30:57,730
and are confronted by
some kind of a robot.

708
00:30:57,730 --> 00:31:01,560
And it says, syntax error.

709
00:31:01,560 --> 00:31:02,710
Remember it's a dog.

710
00:31:02,710 --> 00:31:04,105
It should just say, arf, right?

711
00:31:04,105 --> 00:31:05,730
I could say, take me
me to your leader.

712
00:31:05,730 --> 00:31:06,770
Arf.

713
00:31:06,770 --> 00:31:07,270
OK?

714
00:31:07,270 --> 00:31:10,530

715
00:31:10,530 --> 00:31:12,585
Are you friendly?

716
00:31:12,585 --> 00:31:17,070

717
00:31:17,070 --> 00:31:19,990
I don't think I
spelled friendly right.

718
00:31:19,990 --> 00:31:20,890
Syntax error.

719
00:31:20,890 --> 00:31:25,340

720
00:31:25,340 --> 00:31:27,290
Are you dumb?

721
00:31:27,290 --> 00:31:30,130

722
00:31:30,130 --> 00:31:31,620
Syntax error.

723
00:31:31,620 --> 00:31:34,100
Pretty dumb.

724
00:31:34,100 --> 00:31:35,710
I hate computers.

725
00:31:35,710 --> 00:31:41,590

726
00:31:41,590 --> 00:31:42,990
Syntax error.

727
00:31:42,990 --> 00:31:45,561
It doesn't seem to
have a sense of humor.

728
00:31:45,561 --> 00:31:46,060
Try this.

729
00:31:46,060 --> 00:31:49,940
Knock knock Knock knock.

730
00:31:49,940 --> 00:31:52,750

731
00:31:52,750 --> 00:31:55,760
No sense of humor.

732
00:31:55,760 --> 00:31:58,850
So here's the
problem, it wants us--

733
00:31:58,850 --> 00:32:02,910
it doesn't hate
us-- it just wants

734
00:32:02,910 --> 00:32:05,920
to know what we want done.

735
00:32:05,920 --> 00:32:09,280
So, we need to know
the Python language.

736
00:32:09,280 --> 00:32:11,440
Luckily, I know a bit of Python.

737
00:32:11,440 --> 00:32:14,345
So I'm going to say,
hmm, hey, Python,

738
00:32:14,345 --> 00:32:16,350
I'm going to want some data.

739
00:32:16,350 --> 00:32:19,520
I want to make a variable
named x-- just a little place

740
00:32:19,520 --> 00:32:21,040
in your memory, go find it.

741
00:32:21,040 --> 00:32:24,250
Go find one of your
spare places in memory.

742
00:32:24,250 --> 00:32:29,450
And I want you to
put 100 in that, OK?

743
00:32:29,450 --> 00:32:30,400
Do that.

744
00:32:30,400 --> 00:32:34,390
Now, it's happy, because
I know the language.

745
00:32:34,390 --> 00:32:36,371
Bonjour.

746
00:32:36,371 --> 00:32:38,580
So we know the language.

747
00:32:38,580 --> 00:32:39,940
But it's saying, what next?

748
00:32:39,940 --> 00:32:42,740
So we have to put a program in.

749
00:32:42,740 --> 00:32:44,480
So, let's see.

750
00:32:44,480 --> 00:32:47,952
I'm going to say,
hey, Python, I'm

751
00:32:47,952 --> 00:32:49,410
going to make a
variable called y--

752
00:32:49,410 --> 00:32:51,750
another area in your
memory-- labeled y,

753
00:32:51,750 --> 00:32:53,250
and I want you go
back, and remember

754
00:32:53,250 --> 00:32:54,630
that x I gave you before?

755
00:32:54,630 --> 00:32:59,350
Go get that one back, and add
50 to that, and put that in one.

756
00:32:59,350 --> 00:33:02,600
So now, I've got something in
x and I got something in y.

757
00:33:02,600 --> 00:33:05,110
And, let's print y out.

758
00:33:05,110 --> 00:33:07,970

759
00:33:07,970 --> 00:33:09,060
What's in y?

760
00:33:09,060 --> 00:33:12,570
Go look in y, where you put
that, and let's print it out.

761
00:33:12,570 --> 00:33:14,200
150.

762
00:33:14,200 --> 00:33:17,120
So, we're doing simple things.

763
00:33:17,120 --> 00:33:19,802
And, actually, most programming
is a series of simple things.

764
00:33:19,802 --> 00:33:21,760
The number of statements,
different statements,

765
00:33:21,760 --> 00:33:25,130
you can do is relatively few.

766
00:33:25,130 --> 00:33:29,450
So we are talking to Python.

767
00:33:29,450 --> 00:33:30,880
Let's run back to the slides.

768
00:33:30,880 --> 00:33:31,960
There we go.

769
00:33:31,960 --> 00:33:36,960
And so, we give it a
series of commands,

770
00:33:36,960 --> 00:33:39,440
and you can do the same thing
sitting on your computer,

771
00:33:39,440 --> 00:33:42,800
and you type exit or
quit, with parentheses,

772
00:33:42,800 --> 00:33:44,460
to get out of it
when you're done.

773
00:33:44,460 --> 00:33:46,120
And that ends the
interactive session.

774
00:33:46,120 --> 00:33:47,680
This is interactive
Python, where

775
00:33:47,680 --> 00:33:50,080
it's asking us
command by command

776
00:33:50,080 --> 00:33:52,270
and then interpreting, or
running those commands,

777
00:33:52,270 --> 00:33:54,620
as we finish.

778
00:33:54,620 --> 00:33:58,270
So, you'll be doing in
some kind of a window.

779
00:33:58,270 --> 00:34:00,170
There's a different way
to do it on Windows.

780
00:34:00,170 --> 00:34:02,710
My install documentation
on pythonlearn.com

781
00:34:02,710 --> 00:34:05,960
gives you all of this,
tells you everything to do.

782
00:34:05,960 --> 00:34:08,830
So now we're basically
talking to Python.

783
00:34:08,830 --> 00:34:11,199
So what language?

784
00:34:11,199 --> 00:34:14,320
I've got to still teach
you this language.

785
00:34:14,320 --> 00:34:16,790
So what we say when we
get a hold of Python,

786
00:34:16,790 --> 00:34:18,810
what kinds of things?

787
00:34:18,810 --> 00:34:23,659
Just like any language, a human
language, there's vocabulary,

788
00:34:23,659 --> 00:34:26,860
there's basic words,
there's variables

789
00:34:26,860 --> 00:34:28,830
and reserved words in Python.

790
00:34:28,830 --> 00:34:31,300
Then we combine those
in lines to make

791
00:34:31,300 --> 00:34:33,590
sentence-like structures,
that themselves are not

792
00:34:33,590 --> 00:34:34,710
a full story.

793
00:34:34,710 --> 00:34:37,020
And then we make
a story out of it.

794
00:34:37,020 --> 00:34:40,120
Now, the story is in
the Python language, not

795
00:34:40,120 --> 00:34:42,989
English or French,
or a human language,

796
00:34:42,989 --> 00:34:46,800
but it still is kind of a
sequence of small pieces

797
00:34:46,800 --> 00:34:49,000
that build to make
bigger pieces that then

798
00:34:49,000 --> 00:34:50,630
build to make a whole program.

799
00:34:50,630 --> 00:34:54,590
So here is, again,
that same program.

800
00:34:54,590 --> 00:34:55,230
Right?

801
00:34:55,230 --> 00:34:57,100
That same program
of how to count

802
00:34:57,100 --> 00:34:59,520
the most common word in a file.

803
00:34:59,520 --> 00:35:02,900
And I mentioned before, that
it starts by opening the file,

804
00:35:02,900 --> 00:35:07,590
it reads the data from the
file, splits it into words,

805
00:35:07,590 --> 00:35:09,700
counts them all up, and
then finds the biggest one

806
00:35:09,700 --> 00:35:11,230
and prints it out.

807
00:35:11,230 --> 00:35:16,940
So, name is like a word, equals
is another word, raw is a word.

808
00:35:16,940 --> 00:35:19,420
All these things are
words; each of these things

809
00:35:19,420 --> 00:35:21,740
is like a sentence.

810
00:35:21,740 --> 00:35:24,680
There are blocks of stuff,
they're kind of paragraphs.

811
00:35:24,680 --> 00:35:26,985
There's kind of a
paragraph, paragraph-- maybe

812
00:35:26,985 --> 00:35:29,230
I should put a
different color here--

813
00:35:29,230 --> 00:35:33,500
here's a paragraph and a
paragraph and a paragraph.

814
00:35:33,500 --> 00:35:36,050
And then at the end of the
day, once you understand it--

815
00:35:36,050 --> 00:35:38,300
and you will understand
this before it's all over--

816
00:35:38,300 --> 00:35:40,520
this is kind of like a story.

817
00:35:40,520 --> 00:35:41,020
Right?

818
00:35:41,020 --> 00:35:43,330
It holds together, it has
a beginning, a middle,

819
00:35:43,330 --> 00:35:44,840
and an end.

820
00:35:44,840 --> 00:35:47,190
Again, don't worry
about the detail.

821
00:35:47,190 --> 00:35:49,520
We've got plenty of chapters
to cover this detail.

822
00:35:49,520 --> 00:35:51,490
Don't worry about this
particular program.

823
00:35:51,490 --> 00:35:54,520
I'm just sort of getting into
the sense that you'll get it.

824
00:35:54,520 --> 00:35:56,640
But we'll start simple.

825
00:35:56,640 --> 00:35:58,830
So, the first thing
that you've got

826
00:35:58,830 --> 00:36:04,040
to know how to do in Python,
is know what not to do.

827
00:36:04,040 --> 00:36:06,140
Or, when you use
these reserved words,

828
00:36:06,140 --> 00:36:09,380
they have very special
meaning to Python.

829
00:36:09,380 --> 00:36:11,510
It's like when you
say, I don't think

830
00:36:11,510 --> 00:36:13,900
you're going to get any
food today, to a dog.

831
00:36:13,900 --> 00:36:16,660
The dog hears the word
"food" and nothing else.

832
00:36:16,660 --> 00:36:18,880
So food is a reserved
word for dogs.

833
00:36:18,880 --> 00:36:21,580
Walk, bath-- they're
other reserved words.

834
00:36:21,580 --> 00:36:24,080
So what it really means is, you
can't use these for anything

835
00:36:24,080 --> 00:36:26,520
other than what
they mean to Python.

836
00:36:26,520 --> 00:36:29,400
So, print tells it
to print things.

837
00:36:29,400 --> 00:36:32,350
Return is used in functions.

838
00:36:32,350 --> 00:36:35,600
"Else", "if"-- these
are words that if Python

839
00:36:35,600 --> 00:36:39,450
sees the word "if", it's
like, this means something.

840
00:36:39,450 --> 00:36:41,830
Don't use it for any other
purpose except it's stated

841
00:36:41,830 --> 00:36:44,630
purpose; we'll learn
what those are.

842
00:36:44,630 --> 00:36:47,970
Now if we talk about sentences,
sentences are, in Python,

843
00:36:47,970 --> 00:36:50,750
like a line that
have pieces to them.

844
00:36:50,750 --> 00:36:53,880
So, here is three
pieces of code.

845
00:36:53,880 --> 00:36:55,300
One is x equals 2.

846
00:36:55,300 --> 00:37:00,240
That says, take and find me a
piece of memory in your RAM,

847
00:37:00,240 --> 00:37:03,250
allocate it, label it
x, and stick 2 in it.

848
00:37:03,250 --> 00:37:06,500
This is kind of like
a move 2 into x.

849
00:37:06,500 --> 00:37:10,770
Then, this says, go
get x, add 2 to it,

850
00:37:10,770 --> 00:37:13,120
and then put the
sum back into x.

851
00:37:13,120 --> 00:37:16,190
Again, little sentences that are
kind of like subject/predicate.

852
00:37:16,190 --> 00:37:18,380
Especially with this assignment.

853
00:37:18,380 --> 00:37:20,930
And then print prints
a reserved word.

854
00:37:20,930 --> 00:37:23,280
One that was on the list on
the previous slide, and then

855
00:37:23,280 --> 00:37:24,196
go read that variable.

856
00:37:24,196 --> 00:37:27,815
So, these are like
three sentences

857
00:37:27,815 --> 00:37:28,940
in our new little language.

858
00:37:28,940 --> 00:37:33,570

859
00:37:33,570 --> 00:37:34,070
OK.

860
00:37:34,070 --> 00:37:34,960
So that's sentences.

861
00:37:34,960 --> 00:37:37,460
Now, paragraphs.

862
00:37:37,460 --> 00:37:39,200
Let's talk about paragraphs.

863
00:37:39,200 --> 00:37:41,460
Paragraphs are the
combination of sentences

864
00:37:41,460 --> 00:37:43,070
to make a thought together.

865
00:37:43,070 --> 00:37:46,270
Multiple sentences,
multiple lines.

866
00:37:46,270 --> 00:37:50,040
So the interactive Python
that I just showed you,

867
00:37:50,040 --> 00:37:55,310
is fine for running one,
two, or five or six commands.

868
00:37:55,310 --> 00:37:56,940
But ultimately,
we're going to write

869
00:37:56,940 --> 00:37:59,790
much longer bits of Python.

870
00:37:59,790 --> 00:38:02,220
And so, we write what's
called a Python script,

871
00:38:02,220 --> 00:38:07,400
or a Python program, and
we put these in a file.

872
00:38:07,400 --> 00:38:10,140
And if you went through
the prerequisite,

873
00:38:10,140 --> 00:38:14,400
you will have seen me edit in
a text editor, save the file,

874
00:38:14,400 --> 00:38:17,340
and then run from
the Python file.

875
00:38:17,340 --> 00:38:18,260
OK?

876
00:38:18,260 --> 00:38:20,730
So we call these files--
put dot py on the end

877
00:38:20,730 --> 00:38:22,440
them, py on the end of them.

878
00:38:22,440 --> 00:38:27,120
And we're giving Python
a script to execute.

879
00:38:27,120 --> 00:38:30,450
So interactive, you're
typing directly into Python

880
00:38:30,450 --> 00:38:32,470
and it's doing it right
as you're talking.

881
00:38:32,470 --> 00:38:34,000
You're still doing
it in an order,

882
00:38:34,000 --> 00:38:35,650
and the order does matter.

883
00:38:35,650 --> 00:38:38,380
In a script, you type it all
into a file once and say,

884
00:38:38,380 --> 00:38:39,520
Python do it all.

885
00:38:39,520 --> 00:38:44,850

886
00:38:44,850 --> 00:38:47,250
Now, when you write
one of these things,

887
00:38:47,250 --> 00:38:49,800
there are patterns
for combining these.

888
00:38:49,800 --> 00:38:53,530
There are things that we do to
these lines that sort of treat

889
00:38:53,530 --> 00:38:54,970
them differently.

890
00:38:54,970 --> 00:38:58,090
It's like a recipe, a
set of instructions.

891
00:38:58,090 --> 00:39:00,160
Start at the beginning,
tsh tsh tsh tsh tsh,

892
00:39:00,160 --> 00:39:02,370
but it's a little more
complex than that.

893
00:39:02,370 --> 00:39:04,520
Some steps are just sequential.

894
00:39:04,520 --> 00:39:06,640
Some steps might be skipped.

895
00:39:06,640 --> 00:39:08,890
Some steps we do multiple times.

896
00:39:08,890 --> 00:39:11,680
And other times, we
have set of steps

897
00:39:11,680 --> 00:39:13,810
we do over and over again.

898
00:39:13,810 --> 00:39:15,820
So here's some pictures.

899
00:39:15,820 --> 00:39:19,050
And here's a four
lines of Python,

900
00:39:19,050 --> 00:39:21,030
a little, simple paragraph.

901
00:39:21,030 --> 00:39:26,070
And it's got a sentence that
says, x equals 2, print x,

902
00:39:26,070 --> 00:39:28,740
equals x plus 2, which says
go grab the old value of x,

903
00:39:28,740 --> 00:39:31,730
add 2 to it, stick it
back in x, and print x.

904
00:39:31,730 --> 00:39:35,360
So the output of this
program is 2 then 4.

905
00:39:35,360 --> 00:39:38,340
Because x was 2, we printed
it, then we added 2 to it,

906
00:39:38,340 --> 00:39:40,690
and then we printed
again so it was 4.

907
00:39:40,690 --> 00:39:42,149
Now, these flowcharts,
don't worry.

908
00:39:42,149 --> 00:39:43,690
I'm not going to
make you draw these.

909
00:39:43,690 --> 00:39:45,470
I just draw these in
case, cognitively,

910
00:39:45,470 --> 00:39:49,210
it makes it easier for you to
understand what's going on.

911
00:39:49,210 --> 00:39:52,730
So, x equals 1 is
the first step.

912
00:39:52,730 --> 00:39:55,600
Sequentially, it just continues
on, it runs the print.

913
00:39:55,600 --> 00:39:58,006
x equals x plus
1, runs the print.

914
00:39:58,006 --> 00:39:59,380
So this is just
straight through.

915
00:39:59,380 --> 00:40:01,830
It'll make more sense when we
see a little more convoluted

916
00:40:01,830 --> 00:40:02,630
things.

917
00:40:02,630 --> 00:40:05,220
So this program just
starts naturally.

918
00:40:05,220 --> 00:40:07,860
Python starts at the beginning
and works its way down

919
00:40:07,860 --> 00:40:09,000
through the end.

920
00:40:09,000 --> 00:40:10,640
That's sequential stuff.

921
00:40:10,640 --> 00:40:14,150
That's the normal
order business.

922
00:40:14,150 --> 00:40:17,730
A conditional is a step that
may or may not get executed.

923
00:40:17,730 --> 00:40:19,270
If all we did was
sequential steps,

924
00:40:19,270 --> 00:40:21,390
programs would be kind of dull.

925
00:40:21,390 --> 00:40:21,890
Right?

926
00:40:21,890 --> 00:40:25,560
They would just be like, blah
blah blah blah blah stop.

927
00:40:25,560 --> 00:40:27,712
So there's things like,
what if you do this

928
00:40:27,712 --> 00:40:28,670
or what if you do that?

929
00:40:28,670 --> 00:40:32,110
So we do things like, if
you have more than 40 hours,

930
00:40:32,110 --> 00:40:34,250
I'm going to pay you a
different rate than if I

931
00:40:34,250 --> 00:40:36,020
have under 40 hours.

932
00:40:36,020 --> 00:40:39,760
Those kinds of things
are "if," the word "if."

933
00:40:39,760 --> 00:40:41,930
So in Python, the
way we express this

934
00:40:41,930 --> 00:40:43,840
is we use the keyword "if."

935
00:40:43,840 --> 00:40:45,560
So we say x equals 5.

936
00:40:45,560 --> 00:40:48,710
And we say, if x
is less than 10--

937
00:40:48,710 --> 00:40:50,970
this is a question
that's being asked--

938
00:40:50,970 --> 00:40:53,880
is x less than 10
or not, yes or no?

939
00:40:53,880 --> 00:40:57,990
If it is, we execute the
indented bit, if it's not,

940
00:40:57,990 --> 00:40:59,940
we skip it.

941
00:40:59,940 --> 00:41:04,680
In this case, since x
is 5, we execute it,

942
00:41:04,680 --> 00:41:07,350
then we come back here,
we're going to another one.

943
00:41:07,350 --> 00:41:10,390
If x is greater than 20-- well
this turns out to be false.

944
00:41:10,390 --> 00:41:12,910

945
00:41:12,910 --> 00:41:14,610
So we skip that.

946
00:41:14,610 --> 00:41:16,370
So bigger does not run.

947
00:41:16,370 --> 00:41:17,590
That line never runs.

948
00:41:17,590 --> 00:41:22,130
So the output is
smaller, [? finni. ?]

949
00:41:22,130 --> 00:41:25,890
Now, here, we can take a look
at it in the picture diagram.

950
00:41:25,890 --> 00:41:29,230
We run x equals 5,
we ask a question--

951
00:41:29,230 --> 00:41:31,490
this doesn't hurt x
to ask the question.

952
00:41:31,490 --> 00:41:32,960
Is x less than 10?

953
00:41:32,960 --> 00:41:33,810
The answer is yes.

954
00:41:33,810 --> 00:41:36,780
So we drive down this little
path, we print smaller.

955
00:41:36,780 --> 00:41:39,780
And then we rejoin the freeway.

956
00:41:39,780 --> 00:41:41,870
Is x less than 20?

957
00:41:41,870 --> 00:41:42,380
No.

958
00:41:42,380 --> 00:41:45,340
So we skip and we continue.

959
00:41:45,340 --> 00:41:47,710
So this never gets executed.

960
00:41:47,710 --> 00:41:49,330
So you can think
of it either way.

961
00:41:49,330 --> 00:41:53,280
You can think of it either sort
of like gestalt. Say, if this

962
00:41:53,280 --> 00:41:55,100
is true, do what's indented.

963
00:41:55,100 --> 00:41:58,600
Or you can imagine a little car
driving down a highway making

964
00:41:58,600 --> 00:42:00,500
turn choices as it goes.

965
00:42:00,500 --> 00:42:02,300
They're equivalent.

966
00:42:02,300 --> 00:42:04,900
Over time, it's probably
you'll just start seeing this

967
00:42:04,900 --> 00:42:06,404
and start thinking this way.

968
00:42:06,404 --> 00:42:08,070
But sometimes it helps
to think about it

969
00:42:08,070 --> 00:42:11,810
this way for a little while.

970
00:42:11,810 --> 00:42:13,100
OK.

971
00:42:13,100 --> 00:42:16,410
Now, the next thing I want to
show you is repeated steps.

972
00:42:16,410 --> 00:42:19,760
Steps that happen over
and over and over again.

973
00:42:19,760 --> 00:42:20,970
OK?

974
00:42:20,970 --> 00:42:23,280
And that again, when
I said, oh, computers

975
00:42:23,280 --> 00:42:25,030
are good at handling
a billion words, well

976
00:42:25,030 --> 00:42:27,870
that means it has to have a
loop, or a repeated section.

977
00:42:27,870 --> 00:42:28,692
One for each word.

978
00:42:28,692 --> 00:42:30,400
It's going to do
something for each word.

979
00:42:30,400 --> 00:42:33,930

980
00:42:33,930 --> 00:42:37,540
So here we go, and
in Python-- let's

981
00:42:37,540 --> 00:42:39,880
pick a different festive color.

982
00:42:39,880 --> 00:42:41,910
Let's pick purple
as a festive color.

983
00:42:41,910 --> 00:42:43,990
So here's our program,
starts at the beginning.

984
00:42:43,990 --> 00:42:48,252
Sets the variable n to 5, and
then a key word, reserve word,

985
00:42:48,252 --> 00:42:49,350
while.

986
00:42:49,350 --> 00:42:53,300
While n greater than 0-- again,
this is asking a question.

987
00:42:53,300 --> 00:42:57,080
This is asking a question--
is n greater than 0?

988
00:42:57,080 --> 00:42:58,240
That's a question.

989
00:42:58,240 --> 00:42:59,580
If yes, we're going to do this.

990
00:42:59,580 --> 00:43:00,990
If no, we're going to do that.

991
00:43:00,990 --> 00:43:02,750
Over here, if it's
true, we're going

992
00:43:02,750 --> 00:43:05,060
to execute the
indented part, and then

993
00:43:05,060 --> 00:43:06,720
come back and do it again.

994
00:43:06,720 --> 00:43:09,280
If it's false, we're
going to skip down.

995
00:43:09,280 --> 00:43:13,020
So it's kind of like an if,
except it keeps doing it

996
00:43:13,020 --> 00:43:15,440
over and over and over again.

997
00:43:15,440 --> 00:43:17,690
So it comes in, sets n to 5.

998
00:43:17,690 --> 00:43:18,740
Is n greater than 0?

999
00:43:18,740 --> 00:43:19,950
Yeah, sure.

1000
00:43:19,950 --> 00:43:23,090
So we print n, outcomes 5.

1001
00:43:23,090 --> 00:43:24,800
Then it says, n
equals n minus 1.

1002
00:43:24,800 --> 00:43:27,190
So n becomes 4.

1003
00:43:27,190 --> 00:43:28,910
We can change colors.

1004
00:43:28,910 --> 00:43:31,935
Then it goes back up.

1005
00:43:31,935 --> 00:43:35,690
Goes back up, and asks
the question again.

1006
00:43:35,690 --> 00:43:40,290
n is 4, it's still greater
than 0, so it comes through.

1007
00:43:40,290 --> 00:43:45,010
Prints out 4, subtracts
1, so n is now 3.

1008
00:43:45,010 --> 00:43:45,800
Goes back up.

1009
00:43:45,800 --> 00:43:48,700

1010
00:43:48,700 --> 00:43:49,620
Is n greater 0?

1011
00:43:49,620 --> 00:43:50,690
Yes, it is.

1012
00:43:50,690 --> 00:43:52,350
Print out 3.

1013
00:43:52,350 --> 00:43:55,290
Subtract 1, now it's 2.

1014
00:43:55,290 --> 00:43:58,200
So outcome 3 and 2.

1015
00:43:58,200 --> 00:43:59,890
And it goes back up.

1016
00:43:59,890 --> 00:44:00,960
Still greater than 0?

1017
00:44:00,960 --> 00:44:02,040
Yes, it is.

1018
00:44:02,040 --> 00:44:04,790

1019
00:44:04,790 --> 00:44:07,570
Now it's 1.

1020
00:44:07,570 --> 00:44:11,000
Now we subtract 1, it becomes 0.

1021
00:44:11,000 --> 00:44:11,890
Is it greater than 0?

1022
00:44:11,890 --> 00:44:12,590
No.

1023
00:44:12,590 --> 00:44:15,370
And we finally leave.

1024
00:44:15,370 --> 00:44:17,440
And we finally drop down.

1025
00:44:17,440 --> 00:44:21,280
And so the last thing
becomes the printer blastoff.

1026
00:44:21,280 --> 00:44:22,810
So this is a loop.

1027
00:44:22,810 --> 00:44:25,910
The notion that we're going
to run this little bit of code

1028
00:44:25,910 --> 00:44:26,445
five times.

1029
00:44:26,445 --> 00:44:33,060

1030
00:44:33,060 --> 00:44:36,130
We're going to run this
little bit of code five times.

1031
00:44:36,130 --> 00:44:39,830
And loops have these things
we call iteration variables.

1032
00:44:39,830 --> 00:44:41,590
And that is this n.

1033
00:44:41,590 --> 00:44:43,530
It's a variable
that specifically

1034
00:44:43,530 --> 00:44:45,930
is changing each time it
goes through the loop.

1035
00:44:45,930 --> 00:44:47,969
And that way, we can
control the loop.

1036
00:44:47,969 --> 00:44:49,510
We can decide when
it starts and when

1037
00:44:49,510 --> 00:44:52,230
it stops we can tell if we're
at the beginning, or the end,

1038
00:44:52,230 --> 00:44:53,820
or the first one,
or the last one.

1039
00:44:53,820 --> 00:44:55,500
We'll do a lot of
stuff with loops.

1040
00:44:55,500 --> 00:44:58,430
This is an iteration
variable because we iterate,

1041
00:44:58,430 --> 00:45:00,740
repeatedly iterate,
through the loop.

1042
00:45:00,740 --> 00:45:01,240
OK?

1043
00:45:01,240 --> 00:45:04,200

1044
00:45:04,200 --> 00:45:05,350
Any questions?

1045
00:45:05,350 --> 00:45:06,580
[CHUCKLES]

1046
00:45:06,580 --> 00:45:07,850
Can't do questions.

1047
00:45:07,850 --> 00:45:09,380
OK.

1048
00:45:09,380 --> 00:45:12,920
So now, if we go back
to the little story

1049
00:45:12,920 --> 00:45:15,260
that I-- you've got several
chapters to understand,

1050
00:45:15,260 --> 00:45:15,950
don't worry.

1051
00:45:15,950 --> 00:45:18,050
You actually got like
through chapter nine,

1052
00:45:18,050 --> 00:45:20,190
so don't try to understand
this program right now.

1053
00:45:20,190 --> 00:45:23,600
I'm just trying to give you a
sense of what the picture is

1054
00:45:23,600 --> 00:45:26,780
going to be, right?

1055
00:45:26,780 --> 00:45:29,360
So here are some
sequential statements

1056
00:45:29,360 --> 00:45:31,720
because they aren't indented.

1057
00:45:31,720 --> 00:45:34,100
Those five lines are sequential.

1058
00:45:34,100 --> 00:45:36,190
They just go one
after the other.

1059
00:45:36,190 --> 00:45:38,280
Then we have four.

1060
00:45:38,280 --> 00:45:40,040
And it's indented.

1061
00:45:40,040 --> 00:45:41,280
This is a loop.

1062
00:45:41,280 --> 00:45:43,520
This is going to run
a bunch of times.

1063
00:45:43,520 --> 00:45:46,550
Then we're done with that, we
do some more sequential stuff.

1064
00:45:46,550 --> 00:45:48,080
Now we have a four
loop, and that's

1065
00:45:48,080 --> 00:45:50,470
going to run a bunch of times.

1066
00:45:50,470 --> 00:45:54,230
And then we have an if,
which may or may not run.

1067
00:45:54,230 --> 00:45:57,530
So this little block of
code is conditionally

1068
00:45:57,530 --> 00:45:59,290
executed, based on
something, and here's

1069
00:45:59,290 --> 00:46:01,760
the question we're asking.

1070
00:46:01,760 --> 00:46:03,922
So that's the question.

1071
00:46:03,922 --> 00:46:05,380
And then at the
end, we do a print.

1072
00:46:05,380 --> 00:46:08,450
Now, again, don't try to
make too much sense of this.

1073
00:46:08,450 --> 00:46:11,630
I'm just trying to
show you sequential,

1074
00:46:11,630 --> 00:46:15,832
repeated, repeated, conditional.

1075
00:46:15,832 --> 00:46:16,650
OK?

1076
00:46:16,650 --> 00:46:20,700
Just those concepts show up
in pretty much every program

1077
00:46:20,700 --> 00:46:22,380
that we build.

1078
00:46:22,380 --> 00:46:24,260
OK.

1079
00:46:24,260 --> 00:46:27,390
So let's do a couple
more little exercises

1080
00:46:27,390 --> 00:46:31,040
that get you sort of in the
mindset of being a programmer.

1081
00:46:31,040 --> 00:46:34,530
And how programmers tend to
have to think about problems

1082
00:46:34,530 --> 00:46:36,490
a little bit differently.

1083
00:46:36,490 --> 00:46:37,530
So here we go.

1084
00:46:37,530 --> 00:46:41,340
This, I call this an
animated short story.

1085
00:46:41,340 --> 00:46:45,610
And your job, I'm going to give
you several sets of numbers,

1086
00:46:45,610 --> 00:46:48,000
and I want you to
find the largest

1087
00:46:48,000 --> 00:46:50,760
number in the list of numbers.

1088
00:46:50,760 --> 00:46:55,230
Now, it's not so important to
know what the large number is,

1089
00:46:55,230 --> 00:46:59,760
but also to think about how
your mind attacks the problem.

1090
00:46:59,760 --> 00:47:01,690
What your eyes are
doing, what your mind

1091
00:47:01,690 --> 00:47:03,750
is doing, how you break
a bigger problem down

1092
00:47:03,750 --> 00:47:05,510
into smaller problems.

1093
00:47:05,510 --> 00:47:07,970
How a human solves this problem.

1094
00:47:07,970 --> 00:47:10,750
And then we'll focus on how
a computer might have to look

1095
00:47:10,750 --> 00:47:12,300
at the problem differently, OK?

1096
00:47:12,300 --> 00:47:15,900
So don't just get the answer,
that's not so important.

1097
00:47:15,900 --> 00:47:17,870
Think about how
you get the answer.

1098
00:47:17,870 --> 00:47:20,750
So don't just scroll ahead in
your YouTube and cheat and go

1099
00:47:20,750 --> 00:47:22,080
get the answer.

1100
00:47:22,080 --> 00:47:24,380
Think about actually
solving the problem,

1101
00:47:24,380 --> 00:47:27,550
and then monitor what your
brain is thinking as it goes.

1102
00:47:27,550 --> 00:47:29,620
So, here we go.

1103
00:47:29,620 --> 00:47:31,460
So I'm going to give
you a list of numbers

1104
00:47:31,460 --> 00:47:35,110
and you are tell me what
the largest number is.

1105
00:47:35,110 --> 00:47:36,020
Ready?

1106
00:47:36,020 --> 00:47:37,066
Set.

1107
00:47:37,066 --> 00:47:37,566
Go.

1108
00:47:37,566 --> 00:47:49,540

1109
00:47:49,540 --> 00:47:51,137
I didn't make it easy.

1110
00:47:51,137 --> 00:47:52,720
You're looking for
the largest number.

1111
00:47:52,720 --> 00:48:05,370

1112
00:48:05,370 --> 00:48:06,810
Did you get it?

1113
00:48:06,810 --> 00:48:08,126
Did you get it?

1114
00:48:08,126 --> 00:48:09,750
Did you have to go
back a couple times?

1115
00:48:09,750 --> 00:48:11,730
Actually, I don't care
what the answer is.

1116
00:48:11,730 --> 00:48:14,560
The question is-- how
was your brain solving?

1117
00:48:14,560 --> 00:48:15,060
OK.

1118
00:48:15,060 --> 00:48:17,010
You probably want
to know what it is.

1119
00:48:17,010 --> 00:48:18,710
The answer is 198.

1120
00:48:18,710 --> 00:48:20,140
That was the largest number.

1121
00:48:20,140 --> 00:48:21,890
Of course what I was
doing is I was moving

1122
00:48:21,890 --> 00:48:26,320
it to make it difficult.
But here's the thing--

1123
00:48:26,320 --> 00:48:29,745
how do humans look at this?

1124
00:48:29,745 --> 00:48:33,150
Do humans-- did you look at
25, then you looked at 1,

1125
00:48:33,150 --> 00:48:35,270
then you looked at 114,
did you just look at them

1126
00:48:35,270 --> 00:48:36,890
slowly one at a time?

1127
00:48:36,890 --> 00:48:38,160
Like this?

1128
00:48:38,160 --> 00:48:39,230
Or no?

1129
00:48:39,230 --> 00:48:40,480
I doubt it.

1130
00:48:40,480 --> 00:48:42,310
If you are, maybe
you're a computer.

1131
00:48:42,310 --> 00:48:43,730
Maybe I'm talking to computers.

1132
00:48:43,730 --> 00:48:44,992
Maybe you're all computers!

1133
00:48:44,992 --> 00:48:46,200
I'm certainly not a computer.

1134
00:48:46,200 --> 00:48:47,324
Maybe you're all computers.

1135
00:48:47,324 --> 00:48:49,290
OK, enough of that.

1136
00:48:49,290 --> 00:48:52,280
No, that's probably
not how you did it.

1137
00:48:52,280 --> 00:48:54,530
What you probably did,
was you had your eyes

1138
00:48:54,530 --> 00:48:57,380
move around the whole
thing very rapidly,

1139
00:48:57,380 --> 00:48:59,170
and the first thing
that you figured out

1140
00:48:59,170 --> 00:49:02,210
is that there were
one-digit blobs,

1141
00:49:02,210 --> 00:49:06,330
there were small, medium,
and large blobs of purple.

1142
00:49:06,330 --> 00:49:09,680
And the first thing you
knew, right away, was

1143
00:49:09,680 --> 00:49:14,370
there was no point at looking
at any of the small blobs.

1144
00:49:14,370 --> 00:49:17,800
Your brain just threw the
blobs away really quick.

1145
00:49:17,800 --> 00:49:20,790
Then you say, OK, given that
there's no four-digit numbers,

1146
00:49:20,790 --> 00:49:22,310
there are three-digit numbers.

1147
00:49:22,310 --> 00:49:24,101
Then, what you probably
did, is you started

1148
00:49:24,101 --> 00:49:25,670
looking for the first digit.

1149
00:49:25,670 --> 00:49:28,930
You say, look, there's some
ones, is there any twos?

1150
00:49:28,930 --> 00:49:32,000
Quickly you decided
there are no twos.

1151
00:49:32,000 --> 00:49:34,660
So you knew that you had
to look for the big blobs

1152
00:49:34,660 --> 00:49:36,230
and the second
digit was probably

1153
00:49:36,230 --> 00:49:37,560
the thing that mattered.

1154
00:49:37,560 --> 00:49:39,950
Then you start getting
to the nines-- you say,

1155
00:49:39,950 --> 00:49:41,490
OK, there's some nines.

1156
00:49:41,490 --> 00:49:44,367
So that means it's
one nine something.

1157
00:49:44,367 --> 00:49:46,700
Then that was the part that
you probably had to go check

1158
00:49:46,700 --> 00:49:51,230
to find the-- oh, where
the heck was the 190?

1159
00:49:51,230 --> 00:49:53,480
Ugh.

1160
00:49:53,480 --> 00:49:54,340
Oh, 198.

1161
00:49:54,340 --> 00:49:56,130
Right there.

1162
00:49:56,130 --> 00:49:58,220
Had it color coded,
I could even see it.

1163
00:49:58,220 --> 00:49:59,360
OK

1164
00:49:59,360 --> 00:50:04,500
But the point is, humans
are great at eliminating

1165
00:50:04,500 --> 00:50:07,560
bad solutions really fast.

1166
00:50:07,560 --> 00:50:09,470
And you probably
looked at how big,

1167
00:50:09,470 --> 00:50:12,854
how much purple was on the,
screen eliminating the areas

1168
00:50:12,854 --> 00:50:13,770
that were less purple.

1169
00:50:13,770 --> 00:50:17,340
Because you know that your
brain quickly and instinctively

1170
00:50:17,340 --> 00:50:23,210
knew that the more purple
meant a larger number.

1171
00:50:23,210 --> 00:50:25,440
Computers don't do any of that.

1172
00:50:25,440 --> 00:50:27,770
They don't do any of that.

1173
00:50:27,770 --> 00:50:32,830
So, in order to make you feel
a little more like a computer,

1174
00:50:32,830 --> 00:50:36,050
I have another test.

1175
00:50:36,050 --> 00:50:40,560
And again, the goal is not
just to find a large number,

1176
00:50:40,560 --> 00:50:46,290
but to monitor, as you go,
what your brain is thinking

1177
00:50:46,290 --> 00:50:47,540
while you're doing this.

1178
00:50:47,540 --> 00:50:48,760
OK?

1179
00:50:48,760 --> 00:50:50,650
Do you get it?

1180
00:50:50,650 --> 00:50:52,930
How are you attacking
the problem?

1181
00:50:52,930 --> 00:50:56,520
What is your feeling as
you're attacking the problem?

1182
00:50:56,520 --> 00:50:59,650
Are you a computer, or not?

1183
00:50:59,650 --> 00:51:00,170
Here we go.

1184
00:51:00,170 --> 00:51:01,878
I'm only going to give
you a few seconds.

1185
00:51:01,878 --> 00:51:20,840

1186
00:51:20,840 --> 00:51:27,340
So, what did you get?

1187
00:51:27,340 --> 00:51:33,240
My guess is that most of
you just said, I don't care.

1188
00:51:33,240 --> 00:51:36,084
This is such a hard problem.

1189
00:51:36,084 --> 00:51:37,000
It's a stupid problem.

1190
00:51:37,000 --> 00:51:40,070
Or, I'll try to turn my head
upside down, or something.

1191
00:51:40,070 --> 00:51:41,780
It's a really hard problem.

1192
00:51:41,780 --> 00:51:43,864
The other one was kind of easy.

1193
00:51:43,864 --> 00:51:45,280
You might not have
got it, but you

1194
00:51:45,280 --> 00:51:47,260
had this natural
instinct that allows

1195
00:51:47,260 --> 00:51:49,020
you to approach the problem.

1196
00:51:49,020 --> 00:51:51,430
OK, I'll show you what
the right answer is.

1197
00:51:51,430 --> 00:51:57,590
The right answer
is-- right there.

1198
00:51:57,590 --> 00:52:01,460
It is 197.

1199
00:52:01,460 --> 00:52:02,780
Yay.

1200
00:52:02,780 --> 00:52:03,320
Right.

1201
00:52:03,320 --> 00:52:07,110
You can't-- even if I tell
you, there you are-- you know,

1202
00:52:07,110 --> 00:52:08,100
what is this?

1203
00:52:08,100 --> 00:52:11,170
Is this 500 or 2 00?

1204
00:52:11,170 --> 00:52:14,240
[MOANING]

1205
00:52:14,240 --> 00:52:16,880
Actually, the only way I can do
this, is I flip it to find it.

1206
00:52:16,880 --> 00:52:20,590
I mean, it's just not
what humans are good at.

1207
00:52:20,590 --> 00:52:23,640
This is a little bit more like
how computers see the world.

1208
00:52:23,640 --> 00:52:26,480
But the fact that the data
is frontwards or backwards

1209
00:52:26,480 --> 00:52:28,190
should make no difference.

1210
00:52:28,190 --> 00:52:29,230
Right?

1211
00:52:29,230 --> 00:52:32,570
Computers need a strategy.

1212
00:52:32,570 --> 00:52:34,800
We need to give them a strategy.

1213
00:52:34,800 --> 00:52:36,570
OK.

1214
00:52:36,570 --> 00:52:37,380
So here we go.

1215
00:52:37,380 --> 00:52:40,420

1216
00:52:40,420 --> 00:52:45,560
One last experiment.

1217
00:52:45,560 --> 00:52:49,900
Now, I'm going to show
you numbers one at a time.

1218
00:52:49,900 --> 00:52:51,920
And at the end, I
want you to tell me

1219
00:52:51,920 --> 00:52:54,840
what the largest number
that you saw was.

1220
00:52:54,840 --> 00:52:55,810
Ready?

1221
00:52:55,810 --> 00:52:58,565
Here we go.

1222
00:52:58,565 --> 00:52:59,106
First number.

1223
00:52:59,106 --> 00:53:12,020

1224
00:53:12,020 --> 00:53:13,747
What was the largest number?

1225
00:53:13,747 --> 00:53:21,380

1226
00:53:21,380 --> 00:53:24,940
As a matter of fact, how
did you solve that problem?

1227
00:53:24,940 --> 00:53:28,046
You solved that
problem, most likely,

1228
00:53:28,046 --> 00:53:29,920
because you didn't--
you couldn't look at all

1229
00:53:29,920 --> 00:53:33,800
the numbers the same time, so
you probably created a variable

1230
00:53:33,800 --> 00:53:36,530
in your head without
even knowing it.

1231
00:53:36,530 --> 00:53:39,280
And you put into
that variable, you

1232
00:53:39,280 --> 00:53:44,320
called the variable, the
largest number I've seen so far.

1233
00:53:44,320 --> 00:53:46,600
And you hadn't seen
any, so let's say

1234
00:53:46,600 --> 00:53:49,625
the largest number you've
seen so far is negative 1.

1235
00:53:49,625 --> 00:53:51,870
Then, I showed you 3.

1236
00:53:51,870 --> 00:53:55,910
And you said yourself,
well, negative 1

1237
00:53:55,910 --> 00:53:58,202
is no longer the largest
number I've seen,

1238
00:53:58,202 --> 00:53:59,452
so I'm going to keep that one.

1239
00:53:59,452 --> 00:54:01,910
I'll keep 3, that's
largest I've seen so far.

1240
00:54:01,910 --> 00:54:03,930
And now I see 41.

1241
00:54:03,930 --> 00:54:08,340
41 is larger than 3,
so I will keep that.

1242
00:54:08,340 --> 00:54:09,490
And now I see 12.

1243
00:54:09,490 --> 00:54:13,550
Now, 12 is crap because it's
nowhere near as good as 41.

1244
00:54:13,550 --> 00:54:16,830
So I'm keeping 41.

1245
00:54:16,830 --> 00:54:17,694
9.

1246
00:54:17,694 --> 00:54:18,560
9.

1247
00:54:18,560 --> 00:54:21,490
Not nearly as good as 41,
so I'll throw that away.

1248
00:54:21,490 --> 00:54:22,750
74?

1249
00:54:22,750 --> 00:54:23,670
Better, better.

1250
00:54:23,670 --> 00:54:24,170
Keep it.

1251
00:54:24,170 --> 00:54:25,330
Keep that one.

1252
00:54:25,330 --> 00:54:27,450
So I'll keep 74.

1253
00:54:27,450 --> 00:54:29,279
And the last number's 15.

1254
00:54:29,279 --> 00:54:30,820
Don't even know it's
the last number,

1255
00:54:30,820 --> 00:54:32,540
but we don't want
to keep that one.

1256
00:54:32,540 --> 00:54:34,650
And so now, we're done.

1257
00:54:34,650 --> 00:54:38,000
So we know that at the end,
what was during the loop

1258
00:54:38,000 --> 00:54:42,079
the largest so far,
is the actual largest

1259
00:54:42,079 --> 00:54:42,870
of all the numbers.

1260
00:54:42,870 --> 00:54:47,330
And we don't remember exactly
how many numbers there were.

1261
00:54:47,330 --> 00:54:49,150
So that's like thinking
like a program.

1262
00:54:49,150 --> 00:54:51,360
This kind of sliding window.

1263
00:54:51,360 --> 00:54:53,730
Didn't matter if I gave you
a billion numbers or five

1264
00:54:53,730 --> 00:54:57,070
numbers-- I think the were
five numbers, actually.

1265
00:54:57,070 --> 00:55:00,130
This notion of the largest
so far is a powerful notion.

1266
00:55:00,130 --> 00:55:03,320
As a matter of fact, it's
central to the program

1267
00:55:03,320 --> 00:55:05,450
I've been showing you.

1268
00:55:05,450 --> 00:55:07,970
I don't want you try
to understand this,

1269
00:55:07,970 --> 00:55:14,050
but this part in the purple--
this part in the purple

1270
00:55:14,050 --> 00:55:18,070
is really saying, I'm going to
loop through the counts of all

1271
00:55:18,070 --> 00:55:18,600
the words.

1272
00:55:18,600 --> 00:55:21,310
So it's got a word
like, "the" is 15 times

1273
00:55:21,310 --> 00:55:24,370
and "clown" is four times.

1274
00:55:24,370 --> 00:55:27,290
And it's going to loop through
all the pairs of word value

1275
00:55:27,290 --> 00:55:28,630
combinations.

1276
00:55:28,630 --> 00:55:30,130
And it's going to
basically say, I'm

1277
00:55:30,130 --> 00:55:32,565
going to go through
the counts that I have,

1278
00:55:32,565 --> 00:55:34,940
and I'm going to check to see
is the count I'm looking at

1279
00:55:34,940 --> 00:55:38,820
is bigger than the biggest
count I've seen so far.

1280
00:55:38,820 --> 00:55:41,450
And if it is, I'm
going to remember it.

1281
00:55:41,450 --> 00:55:42,600
Now don't worry about this.

1282
00:55:42,600 --> 00:55:44,141
We haven't covered
any of this stuff.

1283
00:55:44,141 --> 00:55:46,790
That's a chapter two,
three, four, five, six.

1284
00:55:46,790 --> 00:55:51,100
But this is an
algorithm, a paragraph,

1285
00:55:51,100 --> 00:55:55,300
a pattern that allows you
to find the largest number.

1286
00:55:55,300 --> 00:55:57,855
And we'll look at this
again in great detail

1287
00:55:57,855 --> 00:55:59,500
in upcoming chapters.

1288
00:55:59,500 --> 00:56:03,280
So this is thinking
like a computer,

1289
00:56:03,280 --> 00:56:06,930
having the sliding window
across the long list of numbers

1290
00:56:06,930 --> 00:56:09,220
and coming up with
something that

1291
00:56:09,220 --> 00:56:11,420
is the answer that you need.

1292
00:56:11,420 --> 00:56:14,220

1293
00:56:14,220 --> 00:56:15,500
OK.

1294
00:56:15,500 --> 00:56:17,660
So that's the end
of this lecture.

1295
00:56:17,660 --> 00:56:19,230
Read chapter one.

1296
00:56:19,230 --> 00:56:21,160
Write your hello world program.

1297
00:56:21,160 --> 00:56:24,620
Make sure if you haven't,
get Python installed.

1298
00:56:24,620 --> 00:56:28,500
As you read this chapter, and
even as you install Python,

1299
00:56:28,500 --> 00:56:31,040
and even as you write
the first program,

1300
00:56:31,040 --> 00:56:34,440
don't get too stuck
on the details.

1301
00:56:34,440 --> 00:56:36,880
I was confused for like
eight weeks-- well,

1302
00:56:36,880 --> 00:56:39,840
probably six weeks-- in my
first programming class.

1303
00:56:39,840 --> 00:56:41,620
You'll be confused, too.

1304
00:56:41,620 --> 00:56:43,240
Just sort of wander
through with me.

1305
00:56:43,240 --> 00:56:44,990
Keep at it.

1306
00:56:44,990 --> 00:56:48,810
It will start making sense at
some point that's up to you.

1307
00:56:48,810 --> 00:56:50,960
I can't tell you when
it's going to make sense.

1308
00:56:50,960 --> 00:56:54,560
So, don't stare at
everything until you get it,

1309
00:56:54,560 --> 00:56:58,920
just keep digging in and keep
understanding and keep playing,

1310
00:56:58,920 --> 00:57:01,820
and sooner or later this will
make a lot of sense to you.

1311
00:57:01,820 --> 00:57:03,380
I promise you.

1312
00:57:03,380 --> 00:57:05,400
See you next lecture.

1313
00:57:05,400 --> 00:57:07,171