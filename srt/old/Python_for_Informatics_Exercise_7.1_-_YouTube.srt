1
00:00:00,000 --> 00:00:01,130

2
00:00:01,130 --> 00:00:02,760
Hello, and welcome
to the reality

3
00:00:02,760 --> 00:00:05,787
show about exercises in Python.

4
00:00:05,787 --> 00:00:07,370
It's not a very
exciting reality show,

5
00:00:07,370 --> 00:00:10,260
but I'm your host,
Charles Severance.

6
00:00:10,260 --> 00:00:12,850
And these exercises
come from Python

7
00:00:12,850 --> 00:00:15,570
for Informatics,
Exploring Information.

8
00:00:15,570 --> 00:00:21,030
And, of course, this material is
a Creative Commons attribution,

9
00:00:21,030 --> 00:00:24,370
as well as the book
and other materials.

10
00:00:24,370 --> 00:00:26,370
So by now, I hope
that you're getting

11
00:00:26,370 --> 00:00:28,200
pretty good at using Python.

12
00:00:28,200 --> 00:00:30,050
Hopefully, the Python
Learn materials

13
00:00:30,050 --> 00:00:33,060
have been helpful to
get things set up.

14
00:00:33,060 --> 00:00:35,270
So the exercise that
we're working on today

15
00:00:35,270 --> 00:00:40,150
is exercise 7.3 from
the Files chapter.

16
00:00:40,150 --> 00:00:44,040
And our goal is simply
to read through a file

17
00:00:44,040 --> 00:00:47,840
and print out the contents
of a file, all in uppercase.

18
00:00:47,840 --> 00:00:50,625
Executing the program will
look like this screen.

19
00:00:50,625 --> 00:00:52,750
Well, we obviously have to
prompt for the file name

20
00:00:52,750 --> 00:00:54,208
because it says
enter the file name

21
00:00:54,208 --> 00:00:55,580
and then we give it a file name.

22
00:00:55,580 --> 00:00:58,790
We're going to get our file
from this URL shown here,

23
00:00:58,790 --> 00:01:01,790
Python for Informatics slash
code mbox short dot txt.

24
00:01:01,790 --> 00:01:02,710
So let's do that.

25
00:01:02,710 --> 00:01:07,670

26
00:01:07,670 --> 00:01:11,820
So let's go ahead and do this.

27
00:01:11,820 --> 00:01:17,020
So the first thing we're
going to do is go to the web.

28
00:01:17,020 --> 00:01:20,490
And here's Python
for Informatics.

29
00:01:20,490 --> 00:01:23,940
By the time you're seeing this,
maybe it'll be even prettier.

30
00:01:23,940 --> 00:01:27,250
And the URL is in
these code samples,

31
00:01:27,250 --> 00:01:30,300
and this is old school
user look and feel.

32
00:01:30,300 --> 00:01:31,540
And I'm going to open this.

33
00:01:31,540 --> 00:01:34,950
And this is the data that
we're going to work with,

34
00:01:34,950 --> 00:01:37,460
the mailbox format data.

35
00:01:37,460 --> 00:01:41,430
And I'm going to save
this as a text file.

36
00:01:41,430 --> 00:01:47,722
And I'm going to put it
in my desktop, folder

37
00:01:47,722 --> 00:01:48,680
Python for Informatics.

38
00:01:48,680 --> 00:01:53,240
I'm going to put this mailbox
file right in the same place

39
00:01:53,240 --> 00:01:55,110
as all my other files.

40
00:01:55,110 --> 00:01:57,570
And I'm going to verify that
that's looking really good now

41
00:01:57,570 --> 00:02:00,366
by opening up a terminal window.

42
00:02:00,366 --> 00:02:01,740
I'm going to go
into that folder.

43
00:02:01,740 --> 00:02:08,650

44
00:02:08,650 --> 00:02:12,610
Find out that point right
there is in my desktop.

45
00:02:12,610 --> 00:02:14,742
Python.

46
00:02:14,742 --> 00:02:15,450
And there we are.

47
00:02:15,450 --> 00:02:18,730
I've got my file.

48
00:02:18,730 --> 00:02:22,950
So I'll open up Text Wrangler.

49
00:02:22,950 --> 00:02:24,090
Make it a little smaller.

50
00:02:24,090 --> 00:02:26,623

51
00:02:26,623 --> 00:02:28,880
Actually, I could open
this file in Text Wrangler

52
00:02:28,880 --> 00:02:30,810
if I wanted to.

53
00:02:30,810 --> 00:02:31,740
Open mbox-short.

54
00:02:31,740 --> 00:02:35,750
And so there it is, I want
to look at it really closely.

55
00:02:35,750 --> 00:02:37,860
But I don't want that.

56
00:02:37,860 --> 00:02:42,910
I only want to make
a new Python program.

57
00:02:42,910 --> 00:02:46,555
And so we will.

58
00:02:46,555 --> 00:02:47,930
Well, first thing
we've got to do

59
00:02:47,930 --> 00:02:49,346
is we've got to
enter a file name.

60
00:02:49,346 --> 00:02:50,750
So let's do that.

61
00:02:50,750 --> 00:02:57,610
I'll call my variable f
name equals raw input.

62
00:02:57,610 --> 00:03:02,550
Enter a file name.

63
00:03:02,550 --> 00:03:03,970
Colon, space.

64
00:03:03,970 --> 00:03:04,550
Oops.

65
00:03:04,550 --> 00:03:05,860
Switch back to single quotes.

66
00:03:05,860 --> 00:03:07,790
You can use double
quotes or single quotes,

67
00:03:07,790 --> 00:03:09,640
but single quotes are cool.

68
00:03:09,640 --> 00:03:13,400
Double quotes make it look like
you're a Java program, that you

69
00:03:13,400 --> 00:03:15,940
can't remember whether it's
single quotes or double quotes.

70
00:03:15,940 --> 00:03:18,460
Python doesn't care about
it, but the cool people

71
00:03:18,460 --> 00:03:21,160
use single quotes.

72
00:03:21,160 --> 00:03:23,010
I mean, if you want to be cool.

73
00:03:23,010 --> 00:03:24,390
I'm trying to be cool.

74
00:03:24,390 --> 00:03:26,270
You can see I sometimes
don't get it all.

75
00:03:26,270 --> 00:03:28,630
I'm not that cool.

76
00:03:28,630 --> 00:03:30,220
So then I'm going
to print file name.

77
00:03:30,220 --> 00:03:31,325
And let's save this.

78
00:03:31,325 --> 00:03:32,825
And then as soon
as you save it, you

79
00:03:32,825 --> 00:03:37,040
will see that Python
for Informatics.

80
00:03:37,040 --> 00:03:40,500
I'm going to call it
program shout dot py.

81
00:03:40,500 --> 00:03:43,884
And as soon as we get it, we
get a nice syntax coloring

82
00:03:43,884 --> 00:03:45,300
which helps us
understand if we've

83
00:03:45,300 --> 00:03:50,165
made a typographical error like
that or something like that.

84
00:03:50,165 --> 00:03:51,620
So we'll save it.

85
00:03:51,620 --> 00:03:53,480
And if I come here,
right now I'll

86
00:03:53,480 --> 00:03:55,770
see shout dot Python, shout.py.

87
00:03:55,770 --> 00:04:00,770
I say Python shout.py.

88
00:04:00,770 --> 00:04:01,760
Enter file name.

89
00:04:01,760 --> 00:04:03,160
Fred.

90
00:04:03,160 --> 00:04:04,350
Looks good.

91
00:04:04,350 --> 00:04:07,080
I didn't do much else.

92
00:04:07,080 --> 00:04:10,780
So the thing we've got to
do, of course, to read a file

93
00:04:10,780 --> 00:04:12,220
is we can't just read it.

94
00:04:12,220 --> 00:04:15,780
We're going to have
to get a file handle.

95
00:04:15,780 --> 00:04:22,400
So we'll call our file handle
fhand variable equals open.

96
00:04:22,400 --> 00:04:27,490
And then fname is the file.

97
00:04:27,490 --> 00:04:32,800
And then, of course, we can
write a for loop for line in.

98
00:04:32,800 --> 00:04:34,370
Now, line is just variable name.

99
00:04:34,370 --> 00:04:35,820
Don't want to enter key words.

100
00:04:35,820 --> 00:04:37,610
Line is just a variable name.

101
00:04:37,610 --> 00:04:38,536
And fhand.

102
00:04:38,536 --> 00:04:43,440
And that's because the file
handle is a type of sequence

103
00:04:43,440 --> 00:04:46,000
that we can iterate
through in a for loop,

104
00:04:46,000 --> 00:04:53,820
and this loop will run for each
successive line in the file.

105
00:04:53,820 --> 00:04:58,470
And so I will just
say print line

106
00:04:58,470 --> 00:05:03,900
to know that my loop is actually
iterating through the file.

107
00:05:03,900 --> 00:05:06,400
So we've got four lines.

108
00:05:06,400 --> 00:05:09,140
And we'll say Fred again.

109
00:05:09,140 --> 00:05:12,710
And son of a gun, if the
open blows up because there

110
00:05:12,710 --> 00:05:14,180
is no Fred.

111
00:05:14,180 --> 00:05:17,820
So we have to run a program
here that's actually

112
00:05:17,820 --> 00:05:19,430
in the directory.

113
00:05:19,430 --> 00:05:19,930
mbox-short.

114
00:05:19,930 --> 00:05:24,495

115
00:05:24,495 --> 00:05:26,040
Now be sure to log one.

116
00:05:26,040 --> 00:05:29,772
The mbox-short is
just a little easier.

117
00:05:29,772 --> 00:05:31,620
It's small.

118
00:05:31,620 --> 00:05:35,840
it's just the first few
lines of the full mbox file.

119
00:05:35,840 --> 00:05:37,330
So here we go.

120
00:05:37,330 --> 00:05:38,469
And there we are.

121
00:05:38,469 --> 00:05:40,760
Ah, I'm going to have to make
that a little bit bigger.

122
00:05:40,760 --> 00:05:43,900

123
00:05:43,900 --> 00:05:46,510
So if we go up here
and we look at this,

124
00:05:46,510 --> 00:05:50,400
one of the things that we see
is it doesn't look like the file

125
00:05:50,400 --> 00:05:54,580
because there is a blank
line after every line.

126
00:05:54,580 --> 00:05:55,880
And you're saying, oh, crap.

127
00:05:55,880 --> 00:05:56,740
Why is that?

128
00:05:56,740 --> 00:06:00,860
Well, you're just going to have
to get used to the idiom that

129
00:06:00,860 --> 00:06:04,970
is trimming lines.

130
00:06:04,970 --> 00:06:08,110
And so I'm going to trim.

131
00:06:08,110 --> 00:06:11,210
I'm only going to trim on
the right side, line.rtrim.

132
00:06:11,210 --> 00:06:15,250

133
00:06:15,250 --> 00:06:17,260
I'm going to trim the
white space on the end.

134
00:06:17,260 --> 00:06:20,070
And the problem is
there's a new line here,

135
00:06:20,070 --> 00:06:23,420
and that print statement
is also adding new lines.

136
00:06:23,420 --> 00:06:26,220
So I'm just going to trim it.

137
00:06:26,220 --> 00:06:29,000
Save that.

138
00:06:29,000 --> 00:06:32,670
Something smaller so we can
see it going at the same time.

139
00:06:32,670 --> 00:06:35,780
I used Command-K on my
Macintosh to clear the screen.

140
00:06:35,780 --> 00:06:38,640
You can actually use CLS
in Windows if you want.

141
00:06:38,640 --> 00:06:42,435
And so I'm going to run
the same program again.

142
00:06:42,435 --> 00:06:43,060
mbox-short.txt.

143
00:06:43,060 --> 00:06:55,040

144
00:06:55,040 --> 00:06:55,785
Oh, oh, oh.

145
00:06:55,785 --> 00:06:56,410
It's not rtrim.

146
00:06:56,410 --> 00:07:02,170

147
00:07:02,170 --> 00:07:05,400
Store object has
no attribute rtrim

148
00:07:05,400 --> 00:07:07,310
because it's rtrim in
some other language,

149
00:07:07,310 --> 00:07:09,770
and I'm forgetting because I'm
switching between languages.

150
00:07:09,770 --> 00:07:11,617
But there's no method.

151
00:07:11,617 --> 00:07:13,950
And you'll notice that the
syntax coloring is not right,

152
00:07:13,950 --> 00:07:15,010
either.

153
00:07:15,010 --> 00:07:17,910
And it's rstrip.

154
00:07:17,910 --> 00:07:19,820
How many people caught that?

155
00:07:19,820 --> 00:07:20,660
Not many, probably.

156
00:07:20,660 --> 00:07:22,860
I didn't even catch it.

157
00:07:22,860 --> 00:07:24,175
Let's try it again.

158
00:07:24,175 --> 00:07:24,800
mbox-short.txt.

159
00:07:24,800 --> 00:07:30,060

160
00:07:30,060 --> 00:07:32,310
So now it's still
ugly and nasty,

161
00:07:32,310 --> 00:07:36,382
but you can see when we
print the file out here,

162
00:07:36,382 --> 00:07:37,590
there's no extra blank lines.

163
00:07:37,590 --> 00:07:39,640
And that's because the new
lines have been stripped off.

164
00:07:39,640 --> 00:07:42,050
We're still getting a new
line from the print statement,

165
00:07:42,050 --> 00:07:44,790
but we only want one new line.

166
00:07:44,790 --> 00:07:46,220
So we're getting pretty close.

167
00:07:46,220 --> 00:07:47,244

168
00:07:47,244 --> 00:07:49,535
In this bit of the loop right
here, we've got the line.

169
00:07:49,535 --> 00:07:51,860
We've taken off the white space.

170
00:07:51,860 --> 00:07:54,064
So now, it's a pretty
simple task to just say

171
00:07:54,064 --> 00:07:54,730
line=line.upper.

172
00:07:54,730 --> 00:07:58,920

173
00:07:58,920 --> 00:08:02,630
And then we're going to convert
the whole thing to uppercase.

174
00:08:02,630 --> 00:08:04,085
And run it again.

175
00:08:04,085 --> 00:08:04,710
mbox-short.txt.

176
00:08:04,710 --> 00:08:11,490

177
00:08:11,490 --> 00:08:12,515
There we go.

178
00:08:12,515 --> 00:08:16,280
It is shouting, shouting,
shouting, because everything

179
00:08:16,280 --> 00:08:18,480
is in uppercase.

180
00:08:18,480 --> 00:08:20,786
So that's pretty
straightforward.

181
00:08:20,786 --> 00:08:22,640
Not too much error checking.

182
00:08:22,640 --> 00:08:27,870
Let me show you one
Python idiom that

183
00:08:27,870 --> 00:08:29,810
allows you to contract this.

184
00:08:29,810 --> 00:08:31,880
So in a sense, this
is a function call

185
00:08:31,880 --> 00:08:35,950
that says give me back a new
string which is a copy of line

186
00:08:35,950 --> 00:08:37,830
with the white space removed.

187
00:08:37,830 --> 00:08:38,890
Well, this is the string.

188
00:08:38,890 --> 00:08:43,250
And we can apply a string
library method to it as well.

189
00:08:43,250 --> 00:08:48,560
So I can actually tack on
the end of this the upper.

190
00:08:48,560 --> 00:08:50,980
And I can take this line out.

191
00:08:50,980 --> 00:08:52,610
And now I can do
it in all one line.

192
00:08:52,610 --> 00:08:56,700
And this code says take
line, strip the white space,

193
00:08:56,700 --> 00:09:00,364
and then take the
resulting white space free

194
00:09:00,364 --> 00:09:01,530
and convert it to uppercase.

195
00:09:01,530 --> 00:09:04,710

196
00:09:04,710 --> 00:09:06,460
And that should
accomplish the same thing.

197
00:09:06,460 --> 00:09:12,640

198
00:09:12,640 --> 00:09:14,390
Let's make sure we
don't have blank lines.

199
00:09:14,390 --> 00:09:18,570
We don't have blank lines,
so everything is fine.

200
00:09:18,570 --> 00:09:20,134
So we can add a few things.

201
00:09:20,134 --> 00:09:21,300
Let's add something to this.

202
00:09:21,300 --> 00:09:22,960
We got their
specifications done.

203
00:09:22,960 --> 00:09:25,030
We're done at the minimum.

204
00:09:25,030 --> 00:09:27,850
But let me show you
something cool here.

205
00:09:27,850 --> 00:09:30,360
Let's just say you got tired
of typing that file name

206
00:09:30,360 --> 00:09:31,260
all the time.

207
00:09:31,260 --> 00:09:33,970
Here's a little trick.

208
00:09:33,970 --> 00:09:39,820
If the length of fname
is less than one--

209
00:09:39,820 --> 00:09:47,995
I'll just say equals zero--
we're going to set the fname,

210
00:09:47,995 --> 00:09:48,870
fname=mbox-short.txt.

211
00:09:48,870 --> 00:09:56,900

212
00:09:56,900 --> 00:09:59,430
So that basically means if
we enter our real file name,

213
00:09:59,430 --> 00:10:01,850
the length of the file name
will be greater than zero.

214
00:10:01,850 --> 00:10:03,515
If we don't, we're
just going to assume

215
00:10:03,515 --> 00:10:05,500
we're going to change
that variable to fname.

216
00:10:05,500 --> 00:10:07,450
And then when we open
it, we'll have it.

217
00:10:07,450 --> 00:10:08,745
So watch this.

218
00:10:08,745 --> 00:10:09,830
Oh, better save that.

219
00:10:09,830 --> 00:10:15,480

220
00:10:15,480 --> 00:10:17,080
So I could type the file name.

221
00:10:17,080 --> 00:10:19,100
But if I hit enter,
it just does that.

222
00:10:19,100 --> 00:10:20,800
Look how convenient that is.

223
00:10:20,800 --> 00:10:24,110
So effectively, we're creating
a default, as it were.

224
00:10:24,110 --> 00:10:29,710
When the user types Enter,
they do their thing.

225
00:10:29,710 --> 00:10:35,160
So that's pretty much
it for the exercise 7.3,

226
00:10:35,160 --> 00:10:38,160
the shouting exercise.