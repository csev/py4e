1
00:00:00,000 --> 00:00:01,180

2
00:00:01,180 --> 00:00:04,120
Hello and welcome to yet
another worked exercise.

3
00:00:04,120 --> 00:00:06,780
I'm the author of the book
Python for Informatics,

4
00:00:06,780 --> 00:00:09,190
Exploring Information,
as well as

5
00:00:09,190 --> 00:00:13,400
your host for this
particular worked exercise.

6
00:00:13,400 --> 00:00:17,320
As always, the book, this audio
and video, and these slides

7
00:00:17,320 --> 00:00:19,475
are copyright Creative
Commons Attribution,

8
00:00:19,475 --> 00:00:23,540
and I hope you find exciting and
interesting ways to reuse them

9
00:00:23,540 --> 00:00:26,280
and repurpose them
and add to them.

10
00:00:26,280 --> 00:00:29,300
So PythonLearn.com
is my support website

11
00:00:29,300 --> 00:00:31,550
for the Python for
Informatics book.

12
00:00:31,550 --> 00:00:34,300
And hopefully by now you've
got all this worked out,

13
00:00:34,300 --> 00:00:38,470
but it does teach you
how to get started,

14
00:00:38,470 --> 00:00:41,950
all the things that you need
to know to edit files and use

15
00:00:41,950 --> 00:00:44,160
the command line to run
Python programs, you've got

16
00:00:44,160 --> 00:00:45,830
figured it.

17
00:00:45,830 --> 00:00:49,250
So our program for today
is from the List chapter.

18
00:00:49,250 --> 00:00:52,150
And our program is actually
we're going to debug a program

19
00:00:52,150 --> 00:00:55,770
rather than just writing
a program from scratch.

20
00:00:55,770 --> 00:00:58,680
And so what our task
is in this program

21
00:00:58,680 --> 00:01:03,150
is we are looking for
words that start with from.

22
00:01:03,150 --> 00:01:05,267
We're looking for lines
that start with from.

23
00:01:05,267 --> 00:01:06,850
And on the lines
that start with from,

24
00:01:06,850 --> 00:01:08,720
we're going to pull
out the day of the week

25
00:01:08,720 --> 00:01:12,850
that this particular
email message was sent,

26
00:01:12,850 --> 00:01:16,580
Saturday, Friday, whatever.

27
00:01:16,580 --> 00:01:19,417
And so the structure of the
program is pretty standard.

28
00:01:19,417 --> 00:01:21,000
We're going to open
a file at the top.

29
00:01:21,000 --> 00:01:24,087
We're going to loop
through the file.

30
00:01:24,087 --> 00:01:25,670
Strip the new lines
at the end, right.

31
00:01:25,670 --> 00:01:27,935
There's a little new line
at the end of each line.

32
00:01:27,935 --> 00:01:29,310
And then we're
going to use split

33
00:01:29,310 --> 00:01:30,768
to split it into
words, which means

34
00:01:30,768 --> 00:01:36,289
that will make this the 0 word,
the 1 word, and the 2 word.

35
00:01:36,289 --> 00:01:38,830
And then we're going to check
the 0 word to see if it's from.

36
00:01:38,830 --> 00:01:40,410
And if the 0 word's
not from, we're

37
00:01:40,410 --> 00:01:43,720
uninterested in that line, so
we're going to skip back up.

38
00:01:43,720 --> 00:01:45,300
And if it is, good.

39
00:01:45,300 --> 00:01:47,570
If we find a line
we're interested in.

40
00:01:47,570 --> 00:01:51,130
We're going to skip the majority
of the lines of this file.

41
00:01:51,130 --> 00:01:52,780
Less than 1 in
100 of these lines

42
00:01:52,780 --> 00:01:55,552
actually have from
as the first word.

43
00:01:55,552 --> 00:01:57,760
And then the second word is
what we're interested in.

44
00:01:57,760 --> 00:02:00,900
So we're going to print
the day of the week.

45
00:02:00,900 --> 00:02:04,060
So this program,
as we type it in,

46
00:02:04,060 --> 00:02:05,920
is going to have a trace back.

47
00:02:05,920 --> 00:02:08,189
And as soon as you
see trace back,

48
00:02:08,189 --> 00:02:11,290
you immediately are drawn
to the word traceback.

49
00:02:11,290 --> 00:02:12,680
And maybe you've
got to the point

50
00:02:12,680 --> 00:02:16,880
where you start to read the
y list index out of range.

51
00:02:16,880 --> 00:02:19,880
And then it says line
five, so that's helpful.

52
00:02:19,880 --> 00:02:25,620
But the first thing to not
get distracted about is this.

53
00:02:25,620 --> 00:02:27,950
Our program actually
ran a little bit.

54
00:02:27,950 --> 00:02:30,450
So when you look at a
traceback, look right above it

55
00:02:30,450 --> 00:02:33,170
and make sure-- and maybe
you won't see any output--

56
00:02:33,170 --> 00:02:35,470
but maybe your program
will look partially run.

57
00:02:35,470 --> 00:02:39,210
And so don't immediately assume
the program is totally broken.

58
00:02:39,210 --> 00:02:42,320
So this is actually
successful output of one

59
00:02:42,320 --> 00:02:43,760
of the many from lines.

60
00:02:43,760 --> 00:02:45,730
And it dies later.

61
00:02:45,730 --> 00:02:49,620
So as we debug it, we'll
come up with techniques

62
00:02:49,620 --> 00:02:52,466
to figure out how
much your program has

63
00:02:52,466 --> 00:02:53,840
done before it
died, because that

64
00:02:53,840 --> 00:02:57,180
might be an important
question to answer.

65
00:02:57,180 --> 00:03:00,020
How far did your program get?

66
00:03:00,020 --> 00:03:01,860
Because if it dies
before the first line

67
00:03:01,860 --> 00:03:03,443
or on the first line,
that's something

68
00:03:03,443 --> 00:03:07,100
different than if it goes
like, 300 lines and then dies.

69
00:03:07,100 --> 00:03:10,730
If it goes a long ways,
300 lines and then dies,

70
00:03:10,730 --> 00:03:13,080
maybe there's something
subtle or weird about the line

71
00:03:13,080 --> 00:03:16,940
it's dying on rather than just
your program is totally broken.

72
00:03:16,940 --> 00:03:18,477
So look for this.

73
00:03:18,477 --> 00:03:20,810
Look for something where your
program actually partially

74
00:03:20,810 --> 00:03:25,762
worked, and it helps you narrow
down your suspicions as to what

75
00:03:25,762 --> 00:03:26,720
might be wrong with it.

76
00:03:26,720 --> 00:03:29,345
So let's get on with
the programming.

77
00:03:29,345 --> 00:03:31,980

78
00:03:31,980 --> 00:03:34,770
And so I will simply steal this.

79
00:03:34,770 --> 00:03:36,910
I'll cut and paste it.

80
00:03:36,910 --> 00:03:38,620
And that'll be that.

81
00:03:38,620 --> 00:03:42,330
So I'm going to cut and paste
this into my Text Wrangler.

82
00:03:42,330 --> 00:03:44,964
Now, it's always dangerous
cutting and pasting.

83
00:03:44,964 --> 00:03:46,880
But I'm cutting and
pasting from a slide which

84
00:03:46,880 --> 00:03:49,130
seems to work a little better
than cutting and pasting

85
00:03:49,130 --> 00:03:49,827
from PDFs.

86
00:03:49,827 --> 00:03:52,160
You can even get away with
cutting and pasting with PDFs

87
00:03:52,160 --> 00:03:54,618
as long as you don't freak out
when the first thing you see

88
00:03:54,618 --> 00:03:57,750
is a bunch crazy syntax
errors because of characters

89
00:03:57,750 --> 00:03:59,800
being coded improperly.

90
00:03:59,800 --> 00:04:00,646
Synonymous file.

91
00:04:00,646 --> 00:04:01,770
And I'm going to save this.

92
00:04:01,770 --> 00:04:03,290
Save As.

93
00:04:03,290 --> 00:04:09,905
And I'll put this on my
Desktop in the Lists folder.

94
00:04:09,905 --> 00:04:12,580

95
00:04:12,580 --> 00:04:18,245
And we'll call this
day of the week dot py

96
00:04:18,245 --> 00:04:21,790
in the Lists folder.

97
00:04:21,790 --> 00:04:23,780
Of course, it's sync
text colored it,

98
00:04:23,780 --> 00:04:26,310
which makes my Text Wrangler
sync text colored it.

99
00:04:26,310 --> 00:04:28,360
And so sitting in
this Lists folder,

100
00:04:28,360 --> 00:04:30,790
I've got the data
of the week dot py.

101
00:04:30,790 --> 00:04:33,010
And one of the things
that we've got to do

102
00:04:33,010 --> 00:04:35,190
is we've actually got
to get our data files.

103
00:04:35,190 --> 00:04:37,390
See this mbox.short.txt?

104
00:04:37,390 --> 00:04:43,440
So the mbox.short.txt is
sitting here on PythonLearn.com.

105
00:04:43,440 --> 00:04:45,160
I'll go to the Book page.

106
00:04:45,160 --> 00:04:48,209
And you'll see this, all
the stuff in code samples,

107
00:04:48,209 --> 00:04:50,250
including maybe a worked
version of this example.

108
00:04:50,250 --> 00:04:52,070
You just never know.

109
00:04:52,070 --> 00:04:53,970
It doesn't look like
this one's here.

110
00:04:53,970 --> 00:05:01,010
But the file I'm looking
for is mbox.short.txt.

111
00:05:01,010 --> 00:05:01,640
So there it is.

112
00:05:01,640 --> 00:05:02,704
It's a mailing thing.

113
00:05:02,704 --> 00:05:04,870
And here's one of those
lines that we're looking at.

114
00:05:04,870 --> 00:05:05,911
And there's many of them.

115
00:05:05,911 --> 00:05:07,850
This happens to be the
first line in the file.

116
00:05:07,850 --> 00:05:11,970
So I'm going to make sure that
I save this into the folder.

117
00:05:11,970 --> 00:05:14,950
Go back to my desktop.

118
00:05:14,950 --> 00:05:18,490
And put it in Lists
and then Save it.

119
00:05:18,490 --> 00:05:23,420
And so at that point, I should
be able to go back and see,

120
00:05:23,420 --> 00:05:24,290
ah ha.

121
00:05:24,290 --> 00:05:26,670
I have mbox.short.txt.

122
00:05:26,670 --> 00:05:30,890
Now, the interesting thing
is if you read this file--

123
00:05:30,890 --> 00:05:36,720
if you open this file-- Text
Wrangler's perfectly happy.

124
00:05:36,720 --> 00:05:37,920
So we see from.

125
00:05:37,920 --> 00:05:42,560
So if I was to do
a search, and I'm

126
00:05:42,560 --> 00:05:46,420
going to search for the
string capital From space.

127
00:05:46,420 --> 00:05:50,400

128
00:05:50,400 --> 00:05:53,380
And then I'm going
to search next.

129
00:05:53,380 --> 00:05:54,430
Oh, there's lots of them.

130
00:05:54,430 --> 00:05:56,360
I'm going to make
them case sensitive.

131
00:05:56,360 --> 00:05:59,653
So get only the Froms
that are case sensitive.

132
00:05:59,653 --> 00:06:00,500
Oh.

133
00:06:00,500 --> 00:06:01,726
There we go.

134
00:06:01,726 --> 00:06:03,850
And so in a sense, our
program is doing this little

135
00:06:03,850 --> 00:06:06,106
from where it's looking.

136
00:06:06,106 --> 00:06:07,980
It's throwing away all
the lines except those

137
00:06:07,980 --> 00:06:09,310
that start with
From and a space,

138
00:06:09,310 --> 00:06:11,250
because the way the split
works, and then it's

139
00:06:11,250 --> 00:06:14,780
going to pull these days
of the week, these Fridays.

140
00:06:14,780 --> 00:06:17,902

141
00:06:17,902 --> 00:06:19,730
If I was doing it by
hand, I'd be like,

142
00:06:19,730 --> 00:06:21,620
find the line that
starts with From blank

143
00:06:21,620 --> 00:06:24,390
and then grab this little text.

144
00:06:24,390 --> 00:06:25,907
And that's what
I'm interested in.

145
00:06:25,907 --> 00:06:27,490
Maybe I'm curious
as to whether or not

146
00:06:27,490 --> 00:06:31,330
these folks work on the
weekends or on the weekdays,

147
00:06:31,330 --> 00:06:34,520
and that's the purpose of this.

148
00:06:34,520 --> 00:06:35,470
So I'll close this.

149
00:06:35,470 --> 00:06:38,110

150
00:06:38,110 --> 00:06:39,240
Close document.

151
00:06:39,240 --> 00:06:39,854
There we go.

152
00:06:39,854 --> 00:06:41,020
So here's my little program.

153
00:06:41,020 --> 00:06:44,570

154
00:06:44,570 --> 00:06:46,780
I can get rid of this now.

155
00:06:46,780 --> 00:06:48,970
So now I'm going to
go to my desktop.

156
00:06:48,970 --> 00:06:53,010
I'm in my home
directory, cd Desktop.

157
00:06:53,010 --> 00:06:54,370
cd lists.

158
00:06:54,370 --> 00:06:56,340
If I do ls, there I am.

159
00:06:56,340 --> 00:06:58,800
I've got this day
of the week Python

160
00:06:58,800 --> 00:07:01,842
program and mbox.short.txt
sitting here.

161
00:07:01,842 --> 00:07:02,800
So I'm going to run it.

162
00:07:02,800 --> 00:07:08,410

163
00:07:08,410 --> 00:07:09,910
And there it works.

164
00:07:09,910 --> 00:07:10,760
Well, works.

165
00:07:10,760 --> 00:07:11,734
For some value of work.

166
00:07:11,734 --> 00:07:13,400
So we get the same
traceback the lecture

167
00:07:13,400 --> 00:07:14,430
slide suggested we would.

168
00:07:14,430 --> 00:07:15,888
And thankfully,
that probably means

169
00:07:15,888 --> 00:07:19,060
the lecture slide is right.

170
00:07:19,060 --> 00:07:19,800
So here we go.

171
00:07:19,800 --> 00:07:23,760
We got this one thing where the
day of the week is coming out

172
00:07:23,760 --> 00:07:26,310
and then it dies on line five.

173
00:07:26,310 --> 00:07:28,570
And it even gives us
the line it's dying on.

174
00:07:28,570 --> 00:07:30,710
So it's complaining about
list index out of range.

175
00:07:30,710 --> 00:07:32,209
And you might be
able stare at this,

176
00:07:32,209 --> 00:07:34,084
and maybe you have
enough skill already

177
00:07:34,084 --> 00:07:35,750
that you're seeing
these kinds of errors

178
00:07:35,750 --> 00:07:37,791
and you just right away
know what the problem is.

179
00:07:37,791 --> 00:07:39,340
But that's not so much fun.

180
00:07:39,340 --> 00:07:41,340
So here I am in
line five, right?

181
00:07:41,340 --> 00:07:43,760
I'm going to go
right to line five.

182
00:07:43,760 --> 00:07:46,960
And so the first thing I
want to do on line five

183
00:07:46,960 --> 00:07:49,700
is I often add a
print statement right

184
00:07:49,700 --> 00:07:50,990
before the line that's dying.

185
00:07:50,990 --> 00:07:54,090
And I'll just print
out something.

186
00:07:54,090 --> 00:07:56,520
Something random.

187
00:07:56,520 --> 00:07:59,240
Sometimes I'll print
the letter A out.

188
00:07:59,240 --> 00:08:01,460
And so now I'll save this.

189
00:08:01,460 --> 00:08:05,360
And now I'm going
to run it again.

190
00:08:05,360 --> 00:08:08,380
And this tells me just by
putting a print statement

191
00:08:08,380 --> 00:08:10,730
in what's going on here.

192
00:08:10,730 --> 00:08:11,370
It's like, OK.

193
00:08:11,370 --> 00:08:11,980
Wait a sec.

194
00:08:11,980 --> 00:08:13,429
This is the good line.

195
00:08:13,429 --> 00:08:15,220
I mean, this is the
line I'm interested in.

196
00:08:15,220 --> 00:08:17,636
As a matter of fact, I'm going
to make another change just

197
00:08:17,636 --> 00:08:20,370
to help me visually
see what's going on.

198
00:08:20,370 --> 00:08:22,240
I'm going put a
bunch of equal signs

199
00:08:22,240 --> 00:08:24,910
at the beginning of
this line and now I'm

200
00:08:24,910 --> 00:08:26,390
going to run it again.

201
00:08:26,390 --> 00:08:28,740
And so if I look,
it's like, oh, dude.

202
00:08:28,740 --> 00:08:29,650
That's the good line.

203
00:08:29,650 --> 00:08:30,600
That's the line I'm liking.

204
00:08:30,600 --> 00:08:31,650
And here's my debugging.

205
00:08:31,650 --> 00:08:32,400
Something random.

206
00:08:32,400 --> 00:08:33,020
Something random.

207
00:08:33,020 --> 00:08:33,728
Something random.

208
00:08:33,728 --> 00:08:35,809
So a lot of stuff
is going on here.

209
00:08:35,809 --> 00:08:38,960
And then finally, it dies.

210
00:08:38,960 --> 00:08:40,539
So finally it dies here.

211
00:08:40,539 --> 00:08:42,750
Now, it's line six
because I added a line.

212
00:08:42,750 --> 00:08:46,175
So perhaps instead of
printing out something random,

213
00:08:46,175 --> 00:08:49,650
I'll print something useful.

214
00:08:49,650 --> 00:08:51,690
So the first thing
to do is to look

215
00:08:51,690 --> 00:08:53,500
at this statement,
the one that's dying,

216
00:08:53,500 --> 00:08:55,920
and say what is the most
suspicious thing in here?

217
00:08:55,920 --> 00:08:58,770

218
00:08:58,770 --> 00:09:02,190
And so something's going
wrong with this word subzero.

219
00:09:02,190 --> 00:09:04,206
It's saying index out of range.

220
00:09:04,206 --> 00:09:06,080
Something's gone wrong
with the word subzero.

221
00:09:06,080 --> 00:09:07,239
So what's the deal?

222
00:09:07,239 --> 00:09:09,030
So I'm not going to
print out word subzero.

223
00:09:09,030 --> 00:09:10,320
I'm going to print out words.

224
00:09:10,320 --> 00:09:14,250
I'm going say, what is in
this words list at this point?

225
00:09:14,250 --> 00:09:15,250
So now let me Save that.

226
00:09:15,250 --> 00:09:18,020
So instead of me printing
something random,

227
00:09:18,020 --> 00:09:19,530
we'll see a bunch
of words go by.

228
00:09:19,530 --> 00:09:21,890
And so here's that
first line broken

229
00:09:21,890 --> 00:09:25,940
into words, where, from,
Stephen Marquard, Saturday.

230
00:09:25,940 --> 00:09:27,819
And here's our good line.

231
00:09:27,819 --> 00:09:30,360
And then here's one that doesn't
have from as the first word,

232
00:09:30,360 --> 00:09:31,110
so we skip it.

233
00:09:31,110 --> 00:09:32,140
Here's one that doesn't.

234
00:09:32,140 --> 00:09:33,810
So let's continue on.

235
00:09:33,810 --> 00:09:34,910
We see lots of lines.

236
00:09:34,910 --> 00:09:36,772
Everything's cruising along.

237
00:09:36,772 --> 00:09:38,480
We actually see one
that says From colon,

238
00:09:38,480 --> 00:09:40,260
but that's not what
we're looking for,

239
00:09:40,260 --> 00:09:41,620
so that one gets skipped, too.

240
00:09:41,620 --> 00:09:43,150
So make sure you skip that.

241
00:09:43,150 --> 00:09:45,240
Now here we are.

242
00:09:45,240 --> 00:09:46,040
Here's the words.

243
00:09:46,040 --> 00:09:48,900

244
00:09:48,900 --> 00:09:51,700
Here's that list of
words that we've split.

245
00:09:51,700 --> 00:09:53,045
Now, this was line before.

246
00:09:53,045 --> 00:09:53,920
Here's the next line.

247
00:09:53,920 --> 00:09:54,610
It's like, OK.

248
00:09:54,610 --> 00:09:56,840
Now what's going on here?

249
00:09:56,840 --> 00:09:59,690
That looks like an empty list.

250
00:09:59,690 --> 00:10:02,360
So I'm a little more curious.

251
00:10:02,360 --> 00:10:06,990
I'm going to print
line out, too.

252
00:10:06,990 --> 00:10:09,490
And just so I know
what's going on,

253
00:10:09,490 --> 00:10:12,080
I'll stick a couple
pluses in front of that.

254
00:10:12,080 --> 00:10:14,580
So the line will have pluses
on it and it'll print the word.

255
00:10:14,580 --> 00:10:15,860
So let's run this again.

256
00:10:15,860 --> 00:10:18,140
So I'm adding junk
to this, right?

257
00:10:18,140 --> 00:10:20,200
So now if I look at
my things, the pluses

258
00:10:20,200 --> 00:10:22,100
mean that's the line I'm seeing.

259
00:10:22,100 --> 00:10:25,330
I just put those pluses
in so I can visually

260
00:10:25,330 --> 00:10:26,640
see it more naturally.

261
00:10:26,640 --> 00:10:27,880
That's the line.

262
00:10:27,880 --> 00:10:30,160
And you can see how nicely
it breaks it into words.

263
00:10:30,160 --> 00:10:32,460
So it breaks this
line at the space.

264
00:10:32,460 --> 00:10:32,960
Sorry.

265
00:10:32,960 --> 00:10:34,520
That was not so good.

266
00:10:34,520 --> 00:10:38,840
It breaks this line, spam
probability line, at the space

267
00:10:38,840 --> 00:10:41,780
and gives me two words.

268
00:10:41,780 --> 00:10:42,560
So here we go.

269
00:10:42,560 --> 00:10:43,060
Two.

270
00:10:43,060 --> 00:10:43,620
There we go.

271
00:10:43,620 --> 00:10:45,140
Here's the space.

272
00:10:45,140 --> 00:10:47,650
And then it breaks into
one word and another word.

273
00:10:47,650 --> 00:10:48,940
And so that's working.

274
00:10:48,940 --> 00:10:51,820
But if I look here, that's
the line that I'm on.

275
00:10:51,820 --> 00:10:53,257
Oh, well, that's a blank line.

276
00:10:53,257 --> 00:10:53,840
Hang on a sec.

277
00:10:53,840 --> 00:10:55,170
Hang on a sec.

278
00:10:55,170 --> 00:10:57,895
So let's just real quick take
a look at that file again.

279
00:10:57,895 --> 00:11:01,620

280
00:11:01,620 --> 00:11:04,110
Let's look at that file.

281
00:11:04,110 --> 00:11:04,970
And so here we go.

282
00:11:04,970 --> 00:11:05,550
Here we go.

283
00:11:05,550 --> 00:11:08,516

284
00:11:08,516 --> 00:11:09,140
So that's cool.

285
00:11:09,140 --> 00:11:09,630
That's cool.

286
00:11:09,630 --> 00:11:09,960
That's cool.

287
00:11:09,960 --> 00:11:10,918
Let's look at the line.

288
00:11:10,918 --> 00:11:13,610

289
00:11:13,610 --> 00:11:14,580
And here we go.

290
00:11:14,580 --> 00:11:18,150
So if you look, the last thing
that we read successfully

291
00:11:18,150 --> 00:11:20,910
was this line right here.

292
00:11:20,910 --> 00:11:22,720
This line is a blank line.

293
00:11:22,720 --> 00:11:26,410
So our program is
choking on blank lines.

294
00:11:26,410 --> 00:11:29,400
It's not failing on
lines that work right

295
00:11:29,400 --> 00:11:32,040
and it's not failing on lines
that don't have From in them.

296
00:11:32,040 --> 00:11:33,830
It can handle the
From line fine.

297
00:11:33,830 --> 00:11:36,350
It can handle any
other line fine.

298
00:11:36,350 --> 00:11:38,850
But it freaks out
on the simplest

299
00:11:38,850 --> 00:11:42,310
of things, blank lines.

300
00:11:42,310 --> 00:11:44,880
So the question is,
how do we fix this?

301
00:11:44,880 --> 00:11:47,400

302
00:11:47,400 --> 00:11:50,880
How do we deal with this fact
that this bit of code right

303
00:11:50,880 --> 00:11:54,780
here is dying whenever
there's a blank line?

304
00:11:54,780 --> 00:11:57,530

305
00:11:57,530 --> 00:12:00,876
So the way we do this is what's
called the guardian pattern.

306
00:12:00,876 --> 00:12:03,870
I'm going to get rid of this.

307
00:12:03,870 --> 00:12:07,110
So one of the guardian
patterns looks like this.

308
00:12:07,110 --> 00:12:08,510
So we don't want to get to this.

309
00:12:08,510 --> 00:12:10,260
So we want to put
something in front of it

310
00:12:10,260 --> 00:12:13,140
to make sure we never hit it
in the dangerous situation.

311
00:12:13,140 --> 00:12:16,505
So it's if hm hm hm
something continue.

312
00:12:16,505 --> 00:12:19,430

313
00:12:19,430 --> 00:12:21,070
We'll call this thing
the safety check.

314
00:12:21,070 --> 00:12:27,240

315
00:12:27,240 --> 00:12:29,330
If some safety check continue.

316
00:12:29,330 --> 00:12:35,210
So that means that if
the safety check matches,

317
00:12:35,210 --> 00:12:38,700
we're going to not fall through
and not do this dangerous line.

318
00:12:38,700 --> 00:12:42,170
So the question is what would we
put in as the safety check here

319
00:12:42,170 --> 00:12:43,100
to protect?

320
00:12:43,100 --> 00:12:45,077
This line is guarding this line.

321
00:12:45,077 --> 00:12:46,660
That's what the
guardian pattern means

322
00:12:46,660 --> 00:12:52,290
is do something before the
scary thing that hurts you.

323
00:12:52,290 --> 00:12:59,040
So one thing we can do is we
can say, OK, well, what's words?

324
00:12:59,040 --> 00:13:00,410
Well, words is an empty list.

325
00:13:00,410 --> 00:13:01,600
You know what?

326
00:13:01,600 --> 00:13:05,940
If I got an empty list of words,
I have no interest in this.

327
00:13:05,940 --> 00:13:11,320
So if I say words is equal
to an empty list, continue.

328
00:13:11,320 --> 00:13:16,260
So what this basically
says is read the line,

329
00:13:16,260 --> 00:13:19,620
strip it, split it into
words, we'll print it.

330
00:13:19,620 --> 00:13:26,100
If it's an empty list, continue
and go up to the next line.

331
00:13:26,100 --> 00:13:28,220
And then if it is
a nonempty list,

332
00:13:28,220 --> 00:13:32,960
it continues here and checks to
see if the first word is From.

333
00:13:32,960 --> 00:13:34,520
And if it is not, it continues.

334
00:13:34,520 --> 00:13:36,060
And then if it works, it works.

335
00:13:36,060 --> 00:13:40,620
So this line here is
the guardian line.

336
00:13:40,620 --> 00:13:42,682
It's guarding this other line.

337
00:13:42,682 --> 00:13:44,890
And you got to do it in
order if you do the guardian.

338
00:13:44,890 --> 00:13:46,389
You have to have
the guardian happen

339
00:13:46,389 --> 00:13:48,610
before the line in question.

340
00:13:48,610 --> 00:13:49,570
So now let's run it.

341
00:13:49,570 --> 00:13:52,400

342
00:13:52,400 --> 00:13:53,820
Oops.

343
00:13:53,820 --> 00:13:54,570
Let's run it.

344
00:13:54,570 --> 00:13:56,750
And now it works great.

345
00:13:56,750 --> 00:13:59,950
We got a little too much
crap, so we better get rid

346
00:13:59,950 --> 00:14:04,059
of this print statement.

347
00:14:04,059 --> 00:14:05,600
It didn't give me
a traceback, right?

348
00:14:05,600 --> 00:14:07,766
So now I'm going to get rid
of that print statement.

349
00:14:07,766 --> 00:14:08,730
And look at that.

350
00:14:08,730 --> 00:14:09,681
I'm getting the line.

351
00:14:09,681 --> 00:14:10,180
Saturday.

352
00:14:10,180 --> 00:14:10,530
Friday.

353
00:14:10,530 --> 00:14:10,830
Friday.

354
00:14:10,830 --> 00:14:11,140
Friday.

355
00:14:11,140 --> 00:14:11,420
Friday.

356
00:14:11,420 --> 00:14:11,920
Thursday.

357
00:14:11,920 --> 00:14:14,100
So it doesn't look like
these people work weekends,

358
00:14:14,100 --> 00:14:16,970
but it does look like they
like finishing up stuff

359
00:14:16,970 --> 00:14:18,310
toward the end of the week.

360
00:14:18,310 --> 00:14:19,640
So there we go.

361
00:14:19,640 --> 00:14:24,000
I mean, it's not much data
to conclude anything solidly.

362
00:14:24,000 --> 00:14:26,820
Maybe if we look at the
bigger mailbox file,

363
00:14:26,820 --> 00:14:29,580
we can find something else.

364
00:14:29,580 --> 00:14:30,580
So now it works.

365
00:14:30,580 --> 00:14:32,942
Let me show you a
couple of other things

366
00:14:32,942 --> 00:14:34,900
that you could have used
as a guardian pattern.

367
00:14:34,900 --> 00:14:37,810
So we could say if the words
we got back as an empty list,

368
00:14:37,810 --> 00:14:41,550
I could say if the number
of elements in words

369
00:14:41,550 --> 00:14:43,510
is less than 1, continue.

370
00:14:43,510 --> 00:14:46,940
So that basically says, look,
if the words that I got,

371
00:14:46,940 --> 00:14:48,600
if I got fewer than
one word, then I'm

372
00:14:48,600 --> 00:14:50,099
not going to look
for the first word

373
00:14:50,099 --> 00:14:51,640
because that's quite dangerous.

374
00:14:51,640 --> 00:14:54,790
So if I run that,
it again works.

375
00:14:54,790 --> 00:14:57,700
Another more direct, even
potentially more direct,

376
00:14:57,700 --> 00:15:06,900
would be-- let's
move this up-- I

377
00:15:06,900 --> 00:15:14,790
could say if line is equal
to empty string, continue.

378
00:15:14,790 --> 00:15:17,512
So now what it says is if
I'm going a blank line,

379
00:15:17,512 --> 00:15:19,220
I'm not even going to
bother splitting it

380
00:15:19,220 --> 00:15:21,280
because I know exactly
what's going to happen.

381
00:15:21,280 --> 00:15:22,500
So let's see if this works.

382
00:15:22,500 --> 00:15:30,400

383
00:15:30,400 --> 00:15:32,050
So this one works as well.

384
00:15:32,050 --> 00:15:39,620
So now I've got a couple
of code pass-through here.

385
00:15:39,620 --> 00:15:40,590
If the blank line.

386
00:15:40,590 --> 00:15:44,190
I do it after the strip to
make sure it is really empty.

387
00:15:44,190 --> 00:15:45,950
I skip blank lines this way.

388
00:15:45,950 --> 00:15:47,710
I come all the way
down and split,

389
00:15:47,710 --> 00:15:50,270
and then skip lines that don't
start with From this way.

390
00:15:50,270 --> 00:15:52,620
And the only way I make it
all the way down to here

391
00:15:52,620 --> 00:15:57,360
is if it is a non-blank line
and if the first word is a From.

392
00:15:57,360 --> 00:15:58,560
And then I do my thing.

393
00:15:58,560 --> 00:16:06,910
And so that basically is the
notion of the guardian pattern.

394
00:16:06,910 --> 00:16:11,940
And the pattern
is simply if there

395
00:16:11,940 --> 00:16:14,860
is some code that might have a
problem depending on, perhaps,

396
00:16:14,860 --> 00:16:18,190
user input, put
something in before it

397
00:16:18,190 --> 00:16:21,500
that makes sure that you never
get to the dangerous code.

398
00:16:21,500 --> 00:16:23,000
And don't use a try
except for this.

399
00:16:23,000 --> 00:16:26,690
That just would be tacky,
tacky, tacky, tacky.

400
00:16:26,690 --> 00:16:32,560
So that's the end of
this presentation.

401
00:16:32,560 --> 00:16:33,700
So thanks a lot.

402
00:16:33,700 --> 00:16:35,950
And see you on the--