1
00:00:00,857 --> 00:00:02,328
- So now we're going to start learning

2
00:00:02,328 --> 00:00:05,367
the actual Python language.

3
00:00:05,367 --> 00:00:07,257
What do we say?

4
00:00:07,257 --> 00:00:09,410
You can think of this
as almost like writing,

5
00:00:09,410 --> 00:00:11,767
almost like writing a story.

6
00:00:11,767 --> 00:00:13,733
We're going to start
with a basic vocabulary.

7
00:00:13,733 --> 00:00:17,072
We're going to talk a little
bit about lines or sentences.

8
00:00:17,072 --> 00:00:18,788
Then we're going to
start talking about how

9
00:00:18,788 --> 00:00:20,860
to put those sentences together

10
00:00:20,860 --> 00:00:25,026
to make a coherent paragraph, as it were.

11
00:00:25,026 --> 00:00:27,648
You just have to accept
the fact that when I start

12
00:00:27,648 --> 00:00:30,662
teaching you this stuff,
it's not going to make sense

13
00:00:30,662 --> 00:00:33,861
for about six or seven more chapters.

14
00:00:33,861 --> 00:00:36,278
So just sort of bear with me.

15
00:00:37,661 --> 00:00:40,834
I remember when I first
learned, it went from me,

16
00:00:40,834 --> 00:00:43,874
confused, confused,
confused, confused, confused.

17
00:00:43,874 --> 00:00:46,422
Holy mackerel, this is awesome.

18
00:00:46,422 --> 00:00:49,378
I expect many of you will
go through that same thing.

19
00:00:49,378 --> 00:00:52,361
Just learn the first
parts, accept the fact

20
00:00:52,361 --> 00:00:56,528
that it doesn't necessarily
make sense in a big picture.

21
00:00:57,928 --> 00:01:00,019
Just bear with us, okay?

22
00:01:00,019 --> 00:01:01,349
So we'll start with
vocabulary, we'll start

23
00:01:01,349 --> 00:01:03,234
to make sentences, then we'll have

24
00:01:03,234 --> 00:01:06,522
little short stories and paragraphs.

25
00:01:06,522 --> 00:01:08,620
This is a short story about how

26
00:01:08,620 --> 00:01:10,915
to count the words in Python.

27
00:01:10,915 --> 00:01:13,453
It's got a couple of
paragraphs, and we are going

28
00:01:13,453 --> 00:01:16,564
to look at all of this stuff eventually.

29
00:01:16,564 --> 00:01:20,069
We start with a set of reserved words.

30
00:01:20,069 --> 00:01:21,998
What are reserved words?

31
00:01:21,998 --> 00:01:26,165
They're words that Python
expects when you use these words,

32
00:01:27,802 --> 00:01:28,806
that they're going to mean exactly

33
00:01:28,806 --> 00:01:30,709
what Python expects them to mean.

34
00:01:30,709 --> 00:01:32,812
What it really means is
you're not allowed to use them

35
00:01:32,812 --> 00:01:35,275
for any other purpose than
the purpose that Python wants.

36
00:01:35,275 --> 00:01:37,295
It's part of the contract.

37
00:01:37,295 --> 00:01:41,115
It's like when you have a dog, and you go,

38
00:01:41,115 --> 00:01:44,409
what did you think of
that television program?

39
00:01:44,409 --> 00:01:47,756
The dog has no idea what you're
saying, and then you say,

40
00:01:47,756 --> 00:01:50,067
do you want to wait until Saturday

41
00:01:50,067 --> 00:01:52,234
to go to the veterinarian?

42
00:01:54,483 --> 00:01:55,933
And the dog still doesn't
know what you're saying,

43
00:01:55,933 --> 00:01:59,064
and you go like, how would
you like to take a walk?

44
00:01:59,064 --> 00:02:00,373
And then the dog goes, walk,

45
00:02:00,373 --> 00:02:04,191
I know what that means,
and then hits the door.

46
00:02:04,191 --> 00:02:06,493
The way the dog sees you is
blah, blah, blah, blah, walk,

47
00:02:06,493 --> 00:02:09,493
blah, blah, blah, food,
blah, blah, blah, treat,

48
00:02:09,493 --> 00:02:11,395
blah, blah, blah, walk.

49
00:02:11,395 --> 00:02:14,236
That's kind of how Python
looks at these reserved words.

50
00:02:14,236 --> 00:02:15,840
When you say class, it goes class,

51
00:02:15,840 --> 00:02:17,465
oh I know what that means.

52
00:02:17,465 --> 00:02:20,962
Now if I say zap, it's
like oh, was zap something

53
00:02:20,962 --> 00:02:24,187
that you get to decide, or
maybe it's a variable name.

54
00:02:24,187 --> 00:02:27,468
So reserved words are simply
words that when you use

55
00:02:27,468 --> 00:02:30,822
these words in Python, and
there's only a few of them,

56
00:02:30,822 --> 00:02:34,655
like and or del or if,
maybe, pass, maybe, in.

57
00:02:39,234 --> 00:02:41,579
Lot of these you won't end up using them,

58
00:02:41,579 --> 00:02:43,718
it's just these are reserved for Python

59
00:02:43,718 --> 00:02:45,784
and part of the Python vocabulary.

60
00:02:45,784 --> 00:02:47,951
This is Python vocabulary.

61
00:02:49,046 --> 00:02:52,153
When we move from words to sentences,

62
00:02:52,153 --> 00:02:54,583
you see that Python has a series of lines.

63
00:02:54,583 --> 00:02:57,233
A Python program is a
series of statements.

64
00:02:57,233 --> 00:02:59,179
They have an order because the computer

65
00:02:59,179 --> 00:03:02,076
wants to know what next,
what next, what next.

66
00:03:02,076 --> 00:03:05,066
What next is start at the beginning.

67
00:03:05,066 --> 00:03:07,098
I already talked about
an assignment statement

68
00:03:07,098 --> 00:03:09,360
that basically says x = 2.

69
00:03:09,360 --> 00:03:10,910
This is not a mathematical statement.

70
00:03:10,910 --> 00:03:15,011
This is a directive to say,
take this variable two,

71
00:03:15,011 --> 00:03:16,880
this value two, this constant two,

72
00:03:16,880 --> 00:03:19,487
and stick it in a location in your memory,

73
00:03:19,487 --> 00:03:22,267
and remember that I
asked you to name it x.

74
00:03:22,267 --> 00:03:24,660
X is a variable, something you made up.

75
00:03:24,660 --> 00:03:29,013
You chose that, but it's
Python's job to remember it.

76
00:03:29,013 --> 00:03:32,962
So this says, whatever that
x is, there's a two in there.

77
00:03:32,962 --> 00:03:36,267
Now pull that x back out, add two to it,

78
00:03:36,267 --> 00:03:38,218
which makes it four,
and stick it back in x.

79
00:03:38,218 --> 00:03:39,821
So that makes this a four.

80
00:03:39,821 --> 00:03:41,093
So x is a four.

81
00:03:41,093 --> 00:03:44,174
Print(x) says go look up that thing

82
00:03:44,174 --> 00:03:46,098
that was an x and print it out.

83
00:03:46,098 --> 00:03:49,244
So these are like each
line has something to it.

84
00:03:49,244 --> 00:03:51,105
I'm using a reserved word, well, actually

85
00:03:51,105 --> 00:03:55,188
that's a function, but
it's a reserved word, too.

86
00:03:56,522 --> 00:03:58,472
There's reserved words
and all these things

87
00:03:58,472 --> 00:03:59,442
and you combine these.

88
00:03:59,442 --> 00:04:02,340
There are operators, plus is an operator,

89
00:04:02,340 --> 00:04:03,475
equals is an operator.

90
00:04:03,475 --> 00:04:05,027
These things do things,

91
00:04:05,027 --> 00:04:07,330
and we'll learn all this stuff in time.

92
00:04:07,330 --> 00:04:11,330
So the basic building
blocks of lines of Python.

93
00:04:13,508 --> 00:04:15,508
As we take these lines of
Python and build them up,

94
00:04:15,508 --> 00:04:17,082
we end up making paragraphs.

95
00:04:17,082 --> 00:04:20,038
Programming in paragraphs.

96
00:04:20,038 --> 00:04:22,974
One of the things that's
important is I showed you

97
00:04:22,974 --> 00:04:25,768
how to do interactive Python,
so you just type Python,

98
00:04:25,768 --> 00:04:28,784
and you type a statement, and
a statement, and a statement.

99
00:04:28,784 --> 00:04:31,143
Those get really tiring after
about three or four lines

100
00:04:31,143 --> 00:04:33,741
of Python because you
start making mistakes,

101
00:04:33,741 --> 00:04:35,237
and you have to start over.

102
00:04:35,237 --> 00:04:37,490
The better thing to do
is to, as your program

103
00:04:37,490 --> 00:04:40,223
gets a little larger, to write a script.

104
00:04:40,223 --> 00:04:42,371
Put your Python instructions in a file,

105
00:04:42,371 --> 00:04:45,347
and then tell Python
to read from the file,

106
00:04:45,347 --> 00:04:49,638
and then run the script as
it's entered in that file.

107
00:04:49,638 --> 00:04:52,359
We tend to name these files with .py,

108
00:04:52,359 --> 00:04:55,106
and I've got a series of
videos that you can watch

109
00:04:55,106 --> 00:04:57,419
to figure out how this all works.

110
00:04:57,419 --> 00:04:59,999
Like I said, you can type
interactively into Python

111
00:04:59,999 --> 00:05:02,534
and that's a great way to
experiment with Python,

112
00:05:02,534 --> 00:05:05,093
check to see if a statement
does what you think it does,

113
00:05:05,093 --> 00:05:08,728
but script is the way, after
we are past one or two lines

114
00:05:08,728 --> 00:05:12,895
of code, we write it in files
and then run it separately.

115
00:05:14,743 --> 00:05:17,980
There are a couple of basic patterns.

116
00:05:17,980 --> 00:05:20,130
It's really important to
understand each of these patterns,

117
00:05:20,130 --> 00:05:22,840
and like I said, we'll teach
you these patterns separately,

118
00:05:22,840 --> 00:05:24,896
and then we'll combine them together.

119
00:05:24,896 --> 00:05:25,825
When you combine them to together

120
00:05:25,825 --> 00:05:28,401
is when you say, oh
that's what a program is.

121
00:05:28,401 --> 00:05:30,835
You have to suspend disbelief.

122
00:05:30,835 --> 00:05:32,460
We have a couple of different patterns.

123
00:05:32,460 --> 00:05:34,677
One is a sequence of steps, do this,

124
00:05:34,677 --> 00:05:36,092
then do this, then do this.

125
00:05:36,092 --> 00:05:38,279
Conditional is like skipping something.

126
00:05:38,279 --> 00:05:40,522
Repeated does it over
and over and over again.

127
00:05:40,522 --> 00:05:42,728
Computers are really
good at repeating stuff,

128
00:05:42,728 --> 00:05:43,662
much better than people.

129
00:05:43,662 --> 00:05:46,723
People get tired going over
and over doing the same thing.

130
00:05:46,723 --> 00:05:49,735
Then we have stored and
repeated steps as well.

131
00:05:49,735 --> 00:05:52,485
If we take a look at
this, and we take a look

132
00:05:52,485 --> 00:05:56,083
at a Python program,
this is a piece of code,

133
00:05:56,083 --> 00:05:57,204
this is a little script.

134
00:05:57,204 --> 00:06:00,018
If you type this into
code, type this Python code

135
00:06:00,018 --> 00:06:03,672
into a file, and then ran it,
it starts at the beginning,

136
00:06:03,672 --> 00:06:04,609
and then it goes to the next line,

137
00:06:04,609 --> 00:06:06,570
and the next line, and the next line.

138
00:06:06,570 --> 00:06:09,518
Python executes the
scripts as you write them.

139
00:06:09,518 --> 00:06:13,604
Stick a variable, find a
place called, in your memory,

140
00:06:13,604 --> 00:06:16,104
called x, stick two into that,

141
00:06:16,987 --> 00:06:18,683
then go to the next one, print that out.

142
00:06:18,683 --> 00:06:20,482
So the program is producing output.

143
00:06:20,482 --> 00:06:23,319
Now go read x and add two to
it, and stick it back in x,

144
00:06:23,319 --> 00:06:25,703
so x is four, then print that.

145
00:06:25,703 --> 00:06:28,053
This side over here, this
is called a flowchart.

146
00:06:28,053 --> 00:06:29,632
I'm not going to make you draw flowcharts.

147
00:06:29,632 --> 00:06:31,173
I'm only going to draw them a few times

148
00:06:31,173 --> 00:06:33,039
in ways that I think will help you.

149
00:06:33,039 --> 00:06:34,874
But you can think of it as Python,

150
00:06:34,874 --> 00:06:37,118
when it finishes something,
it goes on to the next one,

151
00:06:37,118 --> 00:06:38,578
unless you tell it otherwise.

152
00:06:38,578 --> 00:06:40,108
Finishes this, goes on to the next one.

153
00:06:40,108 --> 00:06:41,977
Finishes this, goes on to the next one.

154
00:06:41,977 --> 00:06:45,449
Finishes this, now the
program is all done.

155
00:06:45,449 --> 00:06:46,874
So that's sequential steps.

156
00:06:46,874 --> 00:06:49,281
You just type them in, Python runs it.

157
00:06:49,281 --> 00:06:52,725
They're important but
sort of uninteresting,

158
00:06:52,725 --> 00:06:55,598
because you can only get so far,

159
00:06:55,598 --> 00:06:57,116
and you can't really make them intelligent

160
00:06:57,116 --> 00:06:59,090
because it's always
going to do the next one.

161
00:06:59,090 --> 00:07:00,679
So the next thing we do is what are called

162
00:07:00,679 --> 00:07:03,025
conditional steps, and
this is where it starts

163
00:07:03,025 --> 00:07:07,045
to get intelligent, where you
are able to encode your brain

164
00:07:07,045 --> 00:07:09,169
into the computer, like oh, wait a sec,

165
00:07:09,169 --> 00:07:12,101
let's only do this step
if something is true.

166
00:07:12,101 --> 00:07:15,022
The syntax that we tend to use here

167
00:07:15,022 --> 00:07:17,355
is the reserved word if, if.

168
00:07:20,666 --> 00:07:23,234
The if is like a little fork in the road.

169
00:07:23,234 --> 00:07:25,490
You can go one way or
you can go another way,

170
00:07:25,490 --> 00:07:27,252
and you're asking a question.

171
00:07:27,252 --> 00:07:29,986
Inside the if statement, right
here, there is a question,

172
00:07:29,986 --> 00:07:34,153
saying is x less than 10, that
resolves to a true or false.

173
00:07:35,487 --> 00:07:37,042
If it's less than 10, that's true.

174
00:07:37,042 --> 00:07:38,935
If it's greater than 10, it's false.

175
00:07:38,935 --> 00:07:42,352
Then what we do is, if it's less than 10,

176
00:07:43,241 --> 00:07:45,851
we have this indented block of
code, there's also this colon

177
00:07:45,851 --> 00:07:46,879
that tells us we're in the beginning

178
00:07:46,879 --> 00:07:48,502
of an indented block of code.

179
00:07:48,502 --> 00:07:52,253
What it basically says is if
this is true, run that code.

180
00:07:52,253 --> 00:07:53,982
If it's false, skip that code.

181
00:07:53,982 --> 00:07:55,763
It can either run it or skip it,

182
00:07:55,763 --> 00:08:00,224
depending on this question
that's being asked.

183
00:08:00,224 --> 00:08:01,057
If you look at this code,

184
00:08:01,057 --> 00:08:04,080
it's pretty obvious what's going on.

185
00:08:04,080 --> 00:08:06,127
It comes down, x is five.

186
00:08:06,127 --> 00:08:09,642
If x is less than 10, that's
true, so it runs this code

187
00:08:09,642 --> 00:08:13,324
and prints out Smaller, and
then it comes back here,

188
00:08:13,324 --> 00:08:15,729
it de-indents, the next basic sequential.

189
00:08:15,729 --> 00:08:17,880
This ends up being kind of a block.

190
00:08:17,880 --> 00:08:21,619
If x is greater than 20,
if x is greater than 20,

191
00:08:21,619 --> 00:08:23,702
oh, come back, come back.

192
00:08:24,595 --> 00:08:27,657
If x is greater than 20,
this turns out to be false,

193
00:08:27,657 --> 00:08:30,274
because x is five and so it skips this.

194
00:08:30,274 --> 00:08:33,254
The Bigger never comes out,
and then it continues on

195
00:08:33,254 --> 00:08:35,240
and prints Finis, oops
that's a typographical error.

196
00:08:35,240 --> 00:08:37,951
Make that a lowercase
print, and it prints Finis.

197
00:08:37,951 --> 00:08:42,118
So it comes in, runs this,
skips this, and then finishes.

198
00:08:45,216 --> 00:08:48,475
Here is the last one we'll
talk about, the repeated steps.

199
00:08:48,475 --> 00:08:52,400
We'll get back to store
and retrieve later,

200
00:08:52,400 --> 00:08:53,652
but for now, we're just going to talk

201
00:08:53,652 --> 00:08:56,105
about three of the four.

202
00:08:56,105 --> 00:08:58,067
This is another program.

203
00:08:58,067 --> 00:09:01,736
The key is that we're going
to use this same choice,

204
00:09:01,736 --> 00:09:03,812
where we're going to go in,
but then we're going to run

205
00:09:03,812 --> 00:09:05,725
for a while, and then we'll have

206
00:09:05,725 --> 00:09:08,131
an exit condition where we get out.

207
00:09:08,131 --> 00:09:11,880
This is a repeated, over and
over and over and over again.

208
00:09:11,880 --> 00:09:15,444
This is the essence of how
we make computers do things

209
00:09:15,444 --> 00:09:17,203
that are seemingly difficult, well,

210
00:09:17,203 --> 00:09:20,311
they are more naturally
difficult for people.

211
00:09:20,311 --> 00:09:22,647
How do we encode this notion that we want

212
00:09:22,647 --> 00:09:25,835
to do something forever, not
forever, but for a while?

213
00:09:25,835 --> 00:09:28,465
How do we encode that notion?

214
00:09:28,465 --> 00:09:30,625
We do it in this way.

215
00:09:30,625 --> 00:09:33,505
We have our statement,
sequentially go to this while.

216
00:09:33,505 --> 00:09:35,025
While is a key word.

217
00:09:35,025 --> 00:09:37,611
It's asking another question
that's a true/false question.

218
00:09:37,611 --> 00:09:39,804
Is n greater than zero?

219
00:09:39,804 --> 00:09:42,948
I read this as as long as n
remains greater than zero,

220
00:09:42,948 --> 00:09:44,854
keep doing this indented block.

221
00:09:44,854 --> 00:09:48,028
You have a colon at the end,
and then you have two lines

222
00:09:48,028 --> 00:09:51,406
of code that's indented, so
that tells us what the loop is,

223
00:09:51,406 --> 00:09:54,548
and this is now de-indented.

224
00:09:54,548 --> 00:09:58,569
It comes in and if this
is true, if this is true,

225
00:09:58,569 --> 00:10:01,023
if this is true, it runs these two lines.

226
00:10:01,023 --> 00:10:04,924
Prints out n, n is five,
then it says, n = n - 1,

227
00:10:04,924 --> 00:10:07,645
which makes n be four, and it goes back up

228
00:10:07,645 --> 00:10:09,911
and it goes up and it
asks this question again.

229
00:10:09,911 --> 00:10:11,804
Is n greater than zero?

230
00:10:11,804 --> 00:10:14,549
If it is, continue on and it prints four,

231
00:10:14,549 --> 00:10:19,055
and then subtracts it, and it
does that four, three, two,

232
00:10:19,055 --> 00:10:20,974
and prints out one, then it comes up.

233
00:10:20,974 --> 00:10:24,391
After this, n is now zero, n is now zero.

234
00:10:25,938 --> 00:10:28,620
N is longer greater than zero, so it takes

235
00:10:28,620 --> 00:10:30,956
sort of the exit ramp, and goes down here,

236
00:10:30,956 --> 00:10:33,176
so it takes the exit
ramp and goes to here,

237
00:10:33,176 --> 00:10:35,176
and runs then next line.

238
00:10:36,750 --> 00:10:38,259
We're going to cover all this again,

239
00:10:38,259 --> 00:10:40,806
so I'm just trying to
give you the big picture.

240
00:10:40,806 --> 00:10:42,213
Next couple of chapters we're going to hit

241
00:10:42,213 --> 00:10:43,895
all these things again,
and we're going to hit them

242
00:10:43,895 --> 00:10:48,087
in much more detail with
a lot better information.

243
00:10:48,087 --> 00:10:50,931
This is now sort of like combining these.

244
00:10:50,931 --> 00:10:55,098
Again, I don't want you to
really like know this stuff.

245
00:10:56,492 --> 00:10:58,221
You will know this in a couple of weeks.

246
00:10:58,221 --> 00:11:00,556
You will see this program again.

247
00:11:00,556 --> 00:11:03,384
But this shows you how
we combine those patterns

248
00:11:03,384 --> 00:11:07,467
of repeated, sequential
and conditional together.

249
00:11:08,642 --> 00:11:10,357
This is a bit of sequential code.

250
00:11:10,357 --> 00:11:12,621
Comes in here, runs this, which happens

251
00:11:12,621 --> 00:11:15,195
to ask for a file name,
and opens the file.

252
00:11:15,195 --> 00:11:17,264
It creates a data structure
called a dictionary.

253
00:11:17,264 --> 00:11:18,407
This is all sequential.

254
00:11:18,407 --> 00:11:20,793
Now the for is another form of loops,

255
00:11:20,793 --> 00:11:22,711
so this is going to loop for a while.

256
00:11:22,711 --> 00:11:26,053
This is within a loop, we
can even have two indents.

257
00:11:26,053 --> 00:11:28,806
That's another loop, so
these are like repeated,

258
00:11:28,806 --> 00:11:31,705
and then it goes down to
the next sequential bit.

259
00:11:31,705 --> 00:11:32,805
Then it does this.

260
00:11:32,805 --> 00:11:34,558
Here's another loop that's going to run.

261
00:11:34,558 --> 00:11:36,550
Then here's a conditional
that's going to run.

262
00:11:36,550 --> 00:11:38,833
When it's all done, we
print out the last thing.

263
00:11:38,833 --> 00:11:42,166
This is of course the program that does,

264
00:11:46,133 --> 00:11:47,441
it figures out the most common word

265
00:11:47,441 --> 00:11:49,203
and prints that most common word out.

266
00:11:49,203 --> 00:11:51,343
So this is a Python short story.

267
00:11:51,343 --> 00:11:54,622
It reads some data, it
reads the name of a file,

268
00:11:54,622 --> 00:11:58,422
it opens that file, it talks
about how to make a histogram,

269
00:11:58,422 --> 00:12:02,194
and then it looks through
for the most common word.

270
00:12:02,194 --> 00:12:05,010
Don't worry too much about this.

271
00:12:05,010 --> 00:12:06,177
Over the next couple of weeks, we'll fill

272
00:12:06,177 --> 00:12:08,487
in the pieces so that
you absolutely understand

273
00:12:08,487 --> 00:12:11,070
every single line of this code.

274
00:12:12,922 --> 00:12:15,513
This is a quick overview of Chapter 1.

275
00:12:15,513 --> 00:12:16,680
Stick with us.

276
00:12:18,374 --> 00:12:21,436
It will be Chapter 7 before
this makes too much sense.

277
00:12:21,436 --> 00:12:24,524
You really have to trust
that you are learning

278
00:12:24,524 --> 00:12:27,575
important things and
that it all makes sense

279
00:12:27,575 --> 00:12:32,291
when we bring it together like
in Chapter 7 in a few weeks.

280
00:12:32,291 --> 00:12:35,708
(quiet jazz piano music)

